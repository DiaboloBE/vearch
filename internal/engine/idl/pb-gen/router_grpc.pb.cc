// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: router_grpc.proto

#include "router_grpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_data_5fmodel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Field;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Document;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Item;
}  // namespace protobuf_data_5fmodel_2eproto
namespace protobuf_errors_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_errors_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_errors_2eproto
namespace protobuf_router_5fgrpc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryRequest_SortFieldMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RangeFilter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RequestHead_ParamsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResponseHead_ParamsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SearchRequest_SortFieldMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SearchStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SortField;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TermFilter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VectorQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RequestHead;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResultItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ResponseHead;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_router_5fgrpc_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SearchResult;
}  // namespace protobuf_router_5fgrpc_2eproto
class RequestHead_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestHead_ParamsEntry_DoNotUse>
      _instance;
} _RequestHead_ParamsEntry_DoNotUse_default_instance_;
class RequestHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestHead>
      _instance;
} _RequestHead_default_instance_;
class ResponseHead_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseHead_ParamsEntry_DoNotUse>
      _instance;
} _ResponseHead_ParamsEntry_DoNotUse_default_instance_;
class ResponseHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseHead>
      _instance;
} _ResponseHead_default_instance_;
class GetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRequest>
      _instance;
} _GetRequest_default_instance_;
class DeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequest>
      _instance;
} _DeleteRequest_default_instance_;
class BulkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkRequest>
      _instance;
} _BulkRequest_default_instance_;
class ForceMergeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForceMergeRequest>
      _instance;
} _ForceMergeRequest_default_instance_;
class FlushRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlushRequest>
      _instance;
} _FlushRequest_default_instance_;
class IndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexRequest>
      _instance;
} _IndexRequest_default_instance_;
class GetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResponse>
      _instance;
} _GetResponse_default_instance_;
class DeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteResponse>
      _instance;
} _DeleteResponse_default_instance_;
class BulkResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkResponse>
      _instance;
} _BulkResponse_default_instance_;
class ForceMergeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForceMergeResponse>
      _instance;
} _ForceMergeResponse_default_instance_;
class DelByQueryeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelByQueryeResponse>
      _instance;
} _DelByQueryeResponse_default_instance_;
class FlushResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlushResponse>
      _instance;
} _FlushResponse_default_instance_;
class IndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexResponse>
      _instance;
} _IndexResponse_default_instance_;
class TermFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TermFilter>
      _instance;
} _TermFilter_default_instance_;
class RangeFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RangeFilter>
      _instance;
} _RangeFilter_default_instance_;
class SortFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SortField>
      _instance;
} _SortField_default_instance_;
class VectorQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VectorQuery>
      _instance;
} _VectorQuery_default_instance_;
class IndexParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexParameters>
      _instance;
} _IndexParameters_default_instance_;
class QueryRequest_SortFieldMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRequest_SortFieldMapEntry_DoNotUse>
      _instance;
} _QueryRequest_SortFieldMapEntry_DoNotUse_default_instance_;
class QueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRequest>
      _instance;
} _QueryRequest_default_instance_;
class SearchRequest_SortFieldMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest_SortFieldMapEntry_DoNotUse>
      _instance;
} _SearchRequest_SortFieldMapEntry_DoNotUse_default_instance_;
class SearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest>
      _instance;
} _SearchRequest_default_instance_;
class ResultItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResultItem>
      _instance;
} _ResultItem_default_instance_;
class SearchResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResult>
      _instance;
} _SearchResult_default_instance_;
class SearchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse>
      _instance;
} _SearchResponse_default_instance_;
class SearchStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchStatus>
      _instance;
} _SearchStatus_default_instance_;
namespace protobuf_router_5fgrpc_2eproto {
static void InitDefaultsRequestHead_ParamsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RequestHead_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::RequestHead_ParamsEntry_DoNotUse();
  }
  ::RequestHead_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestHead_ParamsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestHead_ParamsEntry_DoNotUse}, {}};

static void InitDefaultsRequestHead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RequestHead_default_instance_;
    new (ptr) ::RequestHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RequestHead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RequestHead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequestHead}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead_ParamsEntry_DoNotUse.base,}};

static void InitDefaultsResponseHead_ParamsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResponseHead_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::ResponseHead_ParamsEntry_DoNotUse();
  }
  ::ResponseHead_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseHead_ParamsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponseHead_ParamsEntry_DoNotUse}, {}};

static void InitDefaultsResponseHead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResponseHead_default_instance_;
    new (ptr) ::ResponseHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResponseHead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResponseHead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResponseHead}, {
      &protobuf_errors_2eproto::scc_info_Error.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead_ParamsEntry_DoNotUse.base,}};

static void InitDefaultsGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetRequest_default_instance_;
    new (ptr) ::GetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,}};

static void InitDefaultsDeleteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteRequest_default_instance_;
    new (ptr) ::DeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,}};

static void InitDefaultsBulkRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BulkRequest_default_instance_;
    new (ptr) ::BulkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BulkRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BulkRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBulkRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,
      &protobuf_data_5fmodel_2eproto::scc_info_Document.base,}};

static void InitDefaultsForceMergeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ForceMergeRequest_default_instance_;
    new (ptr) ::ForceMergeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ForceMergeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForceMergeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForceMergeRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,}};

static void InitDefaultsFlushRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FlushRequest_default_instance_;
    new (ptr) ::FlushRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FlushRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FlushRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFlushRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,}};

static void InitDefaultsIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IndexRequest_default_instance_;
    new (ptr) ::IndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIndexRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,}};

static void InitDefaultsGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetResponse_default_instance_;
    new (ptr) ::GetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_data_5fmodel_2eproto::scc_info_Item.base,}};

static void InitDefaultsDeleteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteResponse_default_instance_;
    new (ptr) ::DeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DeleteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDeleteResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_data_5fmodel_2eproto::scc_info_Item.base,}};

static void InitDefaultsBulkResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BulkResponse_default_instance_;
    new (ptr) ::BulkResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BulkResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BulkResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBulkResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_data_5fmodel_2eproto::scc_info_Item.base,}};

static void InitDefaultsForceMergeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ForceMergeResponse_default_instance_;
    new (ptr) ::ForceMergeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ForceMergeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ForceMergeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsForceMergeResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchStatus.base,}};

static void InitDefaultsDelByQueryeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DelByQueryeResponse_default_instance_;
    new (ptr) ::DelByQueryeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DelByQueryeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DelByQueryeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDelByQueryeResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,}};

static void InitDefaultsFlushResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FlushResponse_default_instance_;
    new (ptr) ::FlushResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FlushResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FlushResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFlushResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchStatus.base,}};

static void InitDefaultsIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IndexResponse_default_instance_;
    new (ptr) ::IndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_IndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIndexResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchStatus.base,}};

static void InitDefaultsTermFilter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TermFilter_default_instance_;
    new (ptr) ::TermFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TermFilter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TermFilter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTermFilter}, {}};

static void InitDefaultsRangeFilter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RangeFilter_default_instance_;
    new (ptr) ::RangeFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RangeFilter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RangeFilter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRangeFilter}, {}};

static void InitDefaultsSortField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SortField_default_instance_;
    new (ptr) ::SortField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SortField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SortField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSortField}, {}};

static void InitDefaultsVectorQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VectorQuery_default_instance_;
    new (ptr) ::VectorQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VectorQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VectorQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVectorQuery}, {}};

static void InitDefaultsIndexParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IndexParameters_default_instance_;
    new (ptr) ::IndexParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IndexParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IndexParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIndexParameters}, {}};

static void InitDefaultsQueryRequest_SortFieldMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueryRequest_SortFieldMapEntry_DoNotUse_default_instance_;
    new (ptr) ::QueryRequest_SortFieldMapEntry_DoNotUse();
  }
  ::QueryRequest_SortFieldMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryRequest_SortFieldMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryRequest_SortFieldMapEntry_DoNotUse}, {}};

static void InitDefaultsQueryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueryRequest_default_instance_;
    new (ptr) ::QueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_QueryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsQueryRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_RangeFilter.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_TermFilter.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_QueryRequest_SortFieldMapEntry_DoNotUse.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SortField.base,}};

static void InitDefaultsSearchRequest_SortFieldMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SearchRequest_SortFieldMapEntry_DoNotUse_default_instance_;
    new (ptr) ::SearchRequest_SortFieldMapEntry_DoNotUse();
  }
  ::SearchRequest_SortFieldMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchRequest_SortFieldMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchRequest_SortFieldMapEntry_DoNotUse}, {}};

static void InitDefaultsSearchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SearchRequest_default_instance_;
    new (ptr) ::SearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_SearchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsSearchRequest}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_VectorQuery.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_RangeFilter.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_TermFilter.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchRequest_SortFieldMapEntry_DoNotUse.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SortField.base,}};

static void InitDefaultsResultItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResultItem_default_instance_;
    new (ptr) ::ResultItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResultItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResultItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResultItem}, {
      &protobuf_data_5fmodel_2eproto::scc_info_Field.base,}};

static void InitDefaultsSearchResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SearchResult_default_instance_;
    new (ptr) ::SearchResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SearchResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSearchResult}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchStatus.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_ResultItem.base,}};

static void InitDefaultsSearchResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SearchResponse_default_instance_;
    new (ptr) ::SearchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SearchResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSearchResponse}, {
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base,
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchResult.base,}};

static void InitDefaultsSearchStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SearchStatus_default_instance_;
    new (ptr) ::SearchStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchStatus}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RequestHead_ParamsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestHead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseHead_ParamsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseHead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForceMergeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlushRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForceMergeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DelByQueryeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlushResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TermFilter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RangeFilter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SortField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VectorQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IndexParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRequest_SortFieldMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRequest_SortFieldMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResultItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchStatus.base);
}

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead_ParamsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead_ParamsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, time_out_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, space_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestHead, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead_ParamsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead_ParamsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseHead, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetRequest, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetRequest, primary_keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeleteRequest, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeleteRequest, primary_keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkRequest, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkRequest, docs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkRequest, partitions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForceMergeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForceMergeRequest, head_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FlushRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FlushRequest, head_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexRequest, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexRequest, drop_before_rebuild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexRequest, limit_cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexRequest, describe_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetResponse, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeleteResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeleteResponse, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BulkResponse, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForceMergeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForceMergeResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForceMergeResponse, shards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelByQueryeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelByQueryeResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelByQueryeResponse, delnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelByQueryeResponse, ids_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelByQueryeResponse, ids_long_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FlushResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FlushResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FlushResponse, shards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexResponse, shards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TermFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TermFilter, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TermFilter, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TermFilter, is_union_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RangeFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RangeFilter, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RangeFilter, lower_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RangeFilter, upper_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RangeFilter, include_lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RangeFilter, include_upper_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SortField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SortField, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SortField, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, min_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, max_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorQuery, index_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexParameters, metric_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IndexParameters, nprobe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest_SortFieldMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest_SortFieldMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest_SortFieldMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest_SortFieldMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, document_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, partition_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, next_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, range_filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, term_filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, is_vector_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, load_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, sort_field_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, sort_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, trace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest_SortFieldMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest_SortFieldMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest_SortFieldMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest_SortFieldMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, req_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, topn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, is_brute_search_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, vec_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, range_filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, term_filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, index_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, multi_vector_rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, l2_sqrt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, is_vector_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, sort_field_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, sort_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, ranker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, trace_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResultItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResultItem, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResultItem, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResultItem, p_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResultItem, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, total_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, max_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, max_took_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, max_took_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, result_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResult, topn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResponse, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResponse, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResponse, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResponse, flatbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchResponse, top_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchStatus, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchStatus, failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchStatus, successful_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchStatus, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::RequestHead_ParamsEntry_DoNotUse)},
  { 9, -1, sizeof(::RequestHead)},
  { 21, 28, sizeof(::ResponseHead_ParamsEntry_DoNotUse)},
  { 30, -1, sizeof(::ResponseHead)},
  { 37, -1, sizeof(::GetRequest)},
  { 44, -1, sizeof(::DeleteRequest)},
  { 51, -1, sizeof(::BulkRequest)},
  { 59, -1, sizeof(::ForceMergeRequest)},
  { 65, -1, sizeof(::FlushRequest)},
  { 71, -1, sizeof(::IndexRequest)},
  { 80, -1, sizeof(::GetResponse)},
  { 87, -1, sizeof(::DeleteResponse)},
  { 94, -1, sizeof(::BulkResponse)},
  { 101, -1, sizeof(::ForceMergeResponse)},
  { 108, -1, sizeof(::DelByQueryeResponse)},
  { 117, -1, sizeof(::FlushResponse)},
  { 124, -1, sizeof(::IndexResponse)},
  { 131, -1, sizeof(::TermFilter)},
  { 139, -1, sizeof(::RangeFilter)},
  { 149, -1, sizeof(::SortField)},
  { 156, -1, sizeof(::VectorQuery)},
  { 167, -1, sizeof(::IndexParameters)},
  { 174, 181, sizeof(::QueryRequest_SortFieldMapEntry_DoNotUse)},
  { 183, -1, sizeof(::QueryRequest)},
  { 202, 209, sizeof(::SearchRequest_SortFieldMapEntry_DoNotUse)},
  { 211, -1, sizeof(::SearchRequest)},
  { 232, -1, sizeof(::ResultItem)},
  { 241, -1, sizeof(::SearchResult)},
  { 256, -1, sizeof(::SearchResponse)},
  { 266, -1, sizeof(::SearchStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestHead_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseHead_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BulkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ForceMergeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FlushRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_IndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BulkResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ForceMergeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DelByQueryeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FlushResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_IndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TermFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RangeFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SortField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VectorQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_IndexParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_QueryRequest_SortFieldMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_QueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchRequest_SortFieldMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResultItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "router_grpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021router_grpc.proto\032\020data_model.proto\032\014e"
      "rrors.proto\"\332\001\n\013RequestHead\022\023\n\013time_out_"
      "ms\030\001 \001(\003\022\021\n\tuser_name\030\002 \001(\t\022\020\n\010password\030"
      "\003 \001(\t\022\017\n\007db_name\030\004 \001(\t\022\022\n\nspace_name\030\005 \001"
      "(\t\022\023\n\013client_type\030\006 \001(\t\022(\n\006params\030\007 \003(\0132"
      "\030.RequestHead.ParamsEntry\032-\n\013ParamsEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"}\n\014Resp"
      "onseHead\022\023\n\003err\030\001 \001(\0132\006.Error\022)\n\006params\030"
      "\002 \003(\0132\031.ResponseHead.ParamsEntry\032-\n\013Para"
      "msEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
      ">\n\nGetRequest\022\032\n\004head\030\001 \001(\0132\014.RequestHea"
      "d\022\024\n\014primary_keys\030\002 \003(\t\"A\n\rDeleteRequest"
      "\022\032\n\004head\030\001 \001(\0132\014.RequestHead\022\024\n\014primary_"
      "keys\030\002 \003(\t\"V\n\013BulkRequest\022\032\n\004head\030\001 \001(\0132"
      "\014.RequestHead\022\027\n\004docs\030\002 \003(\0132\t.Document\022\022"
      "\n\npartitions\030\003 \003(\r\"/\n\021ForceMergeRequest\022"
      "\032\n\004head\030\001 \001(\0132\014.RequestHead\"*\n\014FlushRequ"
      "est\022\032\n\004head\030\001 \001(\0132\014.RequestHead\"l\n\014Index"
      "Request\022\032\n\004head\030\001 \001(\0132\014.RequestHead\022\033\n\023d"
      "rop_before_rebuild\030\002 \001(\003\022\021\n\tlimit_cpu\030\003 "
      "\001(\003\022\020\n\010describe\030\004 \001(\003\"@\n\013GetResponse\022\033\n\004"
      "head\030\001 \001(\0132\r.ResponseHead\022\024\n\005items\030\002 \003(\013"
      "2\005.Item\"C\n\016DeleteResponse\022\033\n\004head\030\001 \001(\0132"
      "\r.ResponseHead\022\024\n\005items\030\002 \003(\0132\005.Item\"A\n\014"
      "BulkResponse\022\033\n\004head\030\001 \001(\0132\r.ResponseHea"
      "d\022\024\n\005items\030\002 \003(\0132\005.Item\"P\n\022ForceMergeRes"
      "ponse\022\033\n\004head\030\001 \001(\0132\r.ResponseHead\022\035\n\006sh"
      "ards\030\002 \001(\0132\r.SearchStatus\"e\n\023DelByQuerye"
      "Response\022\033\n\004head\030\001 \001(\0132\r.ResponseHead\022\016\n"
      "\006DelNum\030\002 \001(\005\022\017\n\007ids_str\030\003 \003(\t\022\020\n\010ids_lo"
      "ng\030\004 \003(\003\"K\n\rFlushResponse\022\033\n\004head\030\001 \001(\0132"
      "\r.ResponseHead\022\035\n\006shards\030\002 \001(\0132\r.SearchS"
      "tatus\"K\n\rIndexResponse\022\033\n\004head\030\001 \001(\0132\r.R"
      "esponseHead\022\035\n\006shards\030\002 \001(\0132\r.SearchStat"
      "us\"<\n\nTermFilter\022\r\n\005field\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\014\022\020\n\010is_union\030\003 \001(\005\"t\n\013RangeFilter\022"
      "\r\n\005field\030\001 \001(\t\022\023\n\013lower_value\030\002 \001(\014\022\023\n\013u"
      "pper_value\030\003 \001(\014\022\025\n\rinclude_lower\030\004 \001(\010\022"
      "\025\n\rinclude_upper\030\005 \001(\010\"(\n\tSortField\022\r\n\005f"
      "ield\030\001 \001(\t\022\014\n\004type\030\002 \001(\010\"t\n\013VectorQuery\022"
      "\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\022\021\n\tmin_scor"
      "e\030\003 \001(\001\022\021\n\tmax_score\030\004 \001(\001\022\016\n\006format\030\005 \001"
      "(\t\022\022\n\nindex_type\030\006 \001(\t\"\213\001\n\017IndexParamete"
      "rs\0228\n\013metric_type\030\001 \001(\0162#.IndexParameter"
      "s.DistanceMetricType\022\016\n\006nprobe\030\002 \001(\005\".\n\022"
      "DistanceMetricType\022\020\n\014InnerProduct\020\000\022\006\n\002"
      "L2\020\001\"\253\003\n\014QueryRequest\022\032\n\004head\030\001 \001(\0132\014.Re"
      "questHead\022\024\n\014document_ids\030\002 \003(\t\022\024\n\014parti"
      "tion_id\030\003 \001(\005\022\014\n\004next\030\004 \001(\010\022#\n\rrange_fil"
      "ters\030\005 \003(\0132\014.RangeFilter\022!\n\014term_filters"
      "\030\006 \003(\0132\013.TermFilter\022\016\n\006fields\030\007 \003(\t\022\027\n\017i"
      "s_vector_value\030\010 \001(\010\022\r\n\005limit\030\t \001(\005\022\021\n\tp"
      "age_size\030\n \001(\005\022\024\n\014load_balance\030\013 \001(\t\0227\n\016"
      "sort_field_map\030\014 \003(\0132\037.QueryRequest.Sort"
      "FieldMapEntry\022\037\n\013sort_fields\030\r \003(\0132\n.Sor"
      "tField\022\r\n\005trace\030\016 \001(\010\0323\n\021SortFieldMapEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\347\003\n\rS"
      "earchRequest\022\032\n\004head\030\001 \001(\0132\014.RequestHead"
      "\022\017\n\007req_num\030\002 \001(\005\022\014\n\004topN\030\003 \001(\005\022\027\n\017is_br"
      "ute_search\030\004 \001(\005\022 \n\nvec_fields\030\005 \003(\0132\014.V"
      "ectorQuery\022\016\n\006fields\030\006 \003(\t\022#\n\rrange_filt"
      "ers\030\007 \003(\0132\014.RangeFilter\022!\n\014term_filters\030"
      "\010 \003(\0132\013.TermFilter\022\024\n\014index_params\030\t \001(\t"
      "\022\031\n\021multi_vector_rank\030\n \001(\005\022\017\n\007l2_sqrt\030\013"
      " \001(\010\022\027\n\017is_vector_value\030\014 \001(\010\0228\n\016sort_fi"
      "eld_map\030\r \003(\0132 .SearchRequest.SortFieldM"
      "apEntry\022\037\n\013sort_fields\030\016 \003(\0132\n.SortField"
      "\022\016\n\006ranker\030\017 \001(\t\022\r\n\005trace\030\020 \001(\010\0323\n\021SortF"
      "ieldMapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
      ":\0028\001\"R\n\nResultItem\022\r\n\005score\030\001 \001(\001\022\026\n\006fie"
      "lds\030\002 \003(\0132\006.Field\022\r\n\005p_key\030\003 \001(\t\022\016\n\006sour"
      "ce\030\004 \001(\014\"\327\001\n\014SearchResult\022\022\n\ntotal_hits\030"
      "\001 \001(\005\022\021\n\tmax_score\030\002 \001(\001\022\020\n\010max_took\030\003 \001"
      "(\003\022\023\n\013max_took_id\030\004 \001(\r\022\035\n\006status\030\005 \001(\0132"
      "\r.SearchStatus\022\013\n\003msg\030\006 \001(\t\022!\n\014result_it"
      "ems\030\007 \003(\0132\013.ResultItem\022\013\n\003pID\030\010 \001(\r\022\017\n\007t"
      "imeout\030\t \001(\010\022\014\n\004topN\030\n \001(\005\"\203\001\n\016SearchRes"
      "ponse\022\033\n\004head\030\001 \001(\0132\r.ResponseHead\022\036\n\007re"
      "sults\030\002 \003(\0132\r.SearchResult\022\017\n\007timeout\030\003 "
      "\001(\010\022\021\n\tFlatBytes\030\004 \001(\014\022\020\n\010top_size\030\005 \001(\005"
      "\"N\n\014SearchStatus\022\r\n\005total\030\001 \001(\005\022\016\n\006faile"
      "d\030\002 \001(\005\022\022\n\nsuccessful\030\003 \001(\005\022\013\n\003msg\030\004 \001(\t"
      "2\212\002\n\021RouterGRPCService\022\"\n\003Get\022\013.GetReque"
      "st\032\014.GetResponse\"\000\022+\n\006Delete\022\016.DeleteReq"
      "uest\032\017.DeleteResponse\"\000\022+\n\006Search\022\016.Sear"
      "chRequest\032\017.SearchResponse\"\000\022%\n\004Bulk\022\014.B"
      "ulkRequest\032\r.BulkResponse\"\000\022\037\n\005Space\022\014.R"
      "equestHead\032\006.Table\"\000\022/\n\nSearchByID\022\016.Sea"
      "rchRequest\032\017.SearchResponse\"\000B\016H\001Z\n./vea"
      "rchpbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3573);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "router_grpc.proto", &protobuf_RegisterTypes);
  ::protobuf_data_5fmodel_2eproto::AddDescriptors();
  ::protobuf_errors_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_router_5fgrpc_2eproto
const ::google::protobuf::EnumDescriptor* IndexParameters_DistanceMetricType_descriptor() {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_router_5fgrpc_2eproto::file_level_enum_descriptors[0];
}
bool IndexParameters_DistanceMetricType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const IndexParameters_DistanceMetricType IndexParameters::InnerProduct;
const IndexParameters_DistanceMetricType IndexParameters::L2;
const IndexParameters_DistanceMetricType IndexParameters::DistanceMetricType_MIN;
const IndexParameters_DistanceMetricType IndexParameters::DistanceMetricType_MAX;
const int IndexParameters::DistanceMetricType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

RequestHead_ParamsEntry_DoNotUse::RequestHead_ParamsEntry_DoNotUse() {}
RequestHead_ParamsEntry_DoNotUse::RequestHead_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RequestHead_ParamsEntry_DoNotUse::MergeFrom(const RequestHead_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RequestHead_ParamsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[0];
}
void RequestHead_ParamsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RequestHead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestHead::kTimeOutMsFieldNumber;
const int RequestHead::kUserNameFieldNumber;
const int RequestHead::kPasswordFieldNumber;
const int RequestHead::kDbNameFieldNumber;
const int RequestHead::kSpaceNameFieldNumber;
const int RequestHead::kClientTypeFieldNumber;
const int RequestHead::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestHead::RequestHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RequestHead)
}
RequestHead::RequestHead(const RequestHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  space_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.space_name().size() > 0) {
    space_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.space_name_);
  }
  client_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_type().size() > 0) {
    client_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_type_);
  }
  time_out_ms_ = from.time_out_ms_;
  // @@protoc_insertion_point(copy_constructor:RequestHead)
}

void RequestHead::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_out_ms_ = GOOGLE_LONGLONG(0);
}

RequestHead::~RequestHead() {
  // @@protoc_insertion_point(destructor:RequestHead)
  SharedDtor();
}

void RequestHead::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestHead::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestHead& RequestHead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_RequestHead.base);
  return *internal_default_instance();
}


void RequestHead::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_out_ms_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool RequestHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RequestHead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time_out_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_out_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string db_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string space_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_space_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->space_name().data(), static_cast<int>(this->space_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.space_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_type().data(), static_cast<int>(this->client_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.client_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> params = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          RequestHead_ParamsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RequestHead_ParamsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&params_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.ParamsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestHead.ParamsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RequestHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RequestHead)
  return false;
#undef DO_
}

void RequestHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RequestHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_out_ms = 1;
  if (this->time_out_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time_out_ms(), output);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // string db_name = 4;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db_name(), output);
  }

  // string space_name = 5;
  if (this->space_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->space_name().data(), static_cast<int>(this->space_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.space_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->space_name(), output);
  }

  // string client_type = 6;
  if (this->client_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_type().data(), static_cast<int>(this->client_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.client_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->client_type(), output);
  }

  // map<string, string> params = 7;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestHead.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestHead.ParamsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RequestHead_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RequestHead_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RequestHead)
}

::google::protobuf::uint8* RequestHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RequestHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_out_ms = 1;
  if (this->time_out_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time_out_ms(), target);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // string db_name = 4;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db_name(), target);
  }

  // string space_name = 5;
  if (this->space_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->space_name().data(), static_cast<int>(this->space_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.space_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->space_name(), target);
  }

  // string client_type = 6;
  if (this->client_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_type().data(), static_cast<int>(this->client_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestHead.client_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->client_type(), target);
  }

  // map<string, string> params = 7;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestHead.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestHead.ParamsEntry.value");
      }
    };

    if (deterministic &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RequestHead_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RequestHead_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestHead)
  return target;
}

size_t RequestHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> params = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  {
    ::std::unique_ptr<RequestHead_ParamsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string db_name = 4;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string space_name = 5;
  if (this->space_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->space_name());
  }

  // string client_type = 6;
  if (this->client_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_type());
  }

  // int64 time_out_ms = 1;
  if (this->time_out_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_out_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RequestHead)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RequestHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RequestHead)
    MergeFrom(*source);
  }
}

void RequestHead::MergeFrom(const RequestHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RequestHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.space_name().size() > 0) {

    space_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.space_name_);
  }
  if (from.client_type().size() > 0) {

    client_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_type_);
  }
  if (from.time_out_ms() != 0) {
    set_time_out_ms(from.time_out_ms());
  }
}

void RequestHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RequestHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestHead::CopyFrom(const RequestHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestHead::IsInitialized() const {
  return true;
}

void RequestHead::Swap(RequestHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestHead::InternalSwap(RequestHead* other) {
  using std::swap;
  params_.Swap(&other->params_);
  user_name_.Swap(&other->user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  space_name_.Swap(&other->space_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_type_.Swap(&other->client_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_out_ms_, other->time_out_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestHead::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ResponseHead_ParamsEntry_DoNotUse::ResponseHead_ParamsEntry_DoNotUse() {}
ResponseHead_ParamsEntry_DoNotUse::ResponseHead_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ResponseHead_ParamsEntry_DoNotUse::MergeFrom(const ResponseHead_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ResponseHead_ParamsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[2];
}
void ResponseHead_ParamsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ResponseHead::InitAsDefaultInstance() {
  ::_ResponseHead_default_instance_._instance.get_mutable()->err_ = const_cast< ::Error*>(
      ::Error::internal_default_instance());
}
void ResponseHead::clear_err() {
  if (GetArenaNoVirtual() == NULL && err_ != NULL) {
    delete err_;
  }
  err_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseHead::kErrFieldNumber;
const int ResponseHead::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseHead::ResponseHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResponseHead)
}
ResponseHead::ResponseHead(const ResponseHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  if (from.has_err()) {
    err_ = new ::Error(*from.err_);
  } else {
    err_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ResponseHead)
}

void ResponseHead::SharedCtor() {
  err_ = NULL;
}

ResponseHead::~ResponseHead() {
  // @@protoc_insertion_point(destructor:ResponseHead)
  SharedDtor();
}

void ResponseHead::SharedDtor() {
  if (this != internal_default_instance()) delete err_;
}

void ResponseHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResponseHead::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseHead& ResponseHead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_ResponseHead.base);
  return *internal_default_instance();
}


void ResponseHead::Clear() {
// @@protoc_insertion_point(message_clear_start:ResponseHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  if (GetArenaNoVirtual() == NULL && err_ != NULL) {
    delete err_;
  }
  err_ = NULL;
  _internal_metadata_.Clear();
}

bool ResponseHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResponseHead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Error err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ResponseHead_ParamsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ResponseHead_ParamsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&params_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseHead.ParamsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseHead.ParamsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResponseHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResponseHead)
  return false;
#undef DO_
}

void ResponseHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResponseHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error err = 1;
  if (this->has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_err(), output);
  }

  // map<string, string> params = 2;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseHead.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseHead.ParamsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResponseHead_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ResponseHead_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResponseHead)
}

::google::protobuf::uint8* ResponseHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResponseHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error err = 1;
  if (this->has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_err(), deterministic, target);
  }

  // map<string, string> params = 2;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseHead.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseHead.ParamsEntry.value");
      }
    };

    if (deterministic &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResponseHead_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ResponseHead_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResponseHead)
  return target;
}

size_t ResponseHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResponseHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> params = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  {
    ::std::unique_ptr<ResponseHead_ParamsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .Error err = 1;
  if (this->has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *err_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResponseHead)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResponseHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResponseHead)
    MergeFrom(*source);
  }
}

void ResponseHead::MergeFrom(const ResponseHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResponseHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_err()) {
    mutable_err()->::Error::MergeFrom(from.err());
  }
}

void ResponseHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResponseHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseHead::CopyFrom(const ResponseHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResponseHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseHead::IsInitialized() const {
  return true;
}

void ResponseHead::Swap(ResponseHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseHead::InternalSwap(ResponseHead* other) {
  using std::swap;
  params_.Swap(&other->params_);
  swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResponseHead::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRequest::InitAsDefaultInstance() {
  ::_GetRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kHeadFieldNumber;
const int GetRequest::kPrimaryKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_GetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      primary_keys_(from.primary_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GetRequest)
}

void GetRequest::SharedCtor() {
  head_ = NULL;
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_GetRequest.base);
  return *internal_default_instance();
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primary_keys_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string primary_keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_primary_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primary_keys(this->primary_keys_size() - 1).data(),
            static_cast<int>(this->primary_keys(this->primary_keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetRequest.primary_keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated string primary_keys = 2;
  for (int i = 0, n = this->primary_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_keys(i).data(), static_cast<int>(this->primary_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetRequest.primary_keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->primary_keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated string primary_keys = 2;
  for (int i = 0, n = this->primary_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_keys(i).data(), static_cast<int>(this->primary_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetRequest.primary_keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->primary_keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string primary_keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->primary_keys_size());
  for (int i = 0, n = this->primary_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->primary_keys(i));
  }

  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  primary_keys_.MergeFrom(from.primary_keys_);
  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  primary_keys_.InternalSwap(CastToBase(&other->primary_keys_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRequest::InitAsDefaultInstance() {
  ::_DeleteRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kHeadFieldNumber;
const int DeleteRequest::kPrimaryKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_DeleteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      primary_keys_(from.primary_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  head_ = NULL;
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void DeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRequest& DeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_DeleteRequest.base);
  return *internal_default_instance();
}


void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primary_keys_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string primary_keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_primary_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primary_keys(this->primary_keys_size() - 1).data(),
            static_cast<int>(this->primary_keys(this->primary_keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeleteRequest.primary_keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteRequest)
  return false;
#undef DO_
}

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated string primary_keys = 2;
  for (int i = 0, n = this->primary_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_keys(i).data(), static_cast<int>(this->primary_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteRequest.primary_keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->primary_keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated string primary_keys = 2;
  for (int i = 0, n = this->primary_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_keys(i).data(), static_cast<int>(this->primary_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteRequest.primary_keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->primary_keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string primary_keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->primary_keys_size());
  for (int i = 0, n = this->primary_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->primary_keys(i));
  }

  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  primary_keys_.MergeFrom(from.primary_keys_);
  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  primary_keys_.InternalSwap(CastToBase(&other->primary_keys_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkRequest::InitAsDefaultInstance() {
  ::_BulkRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
void BulkRequest::clear_docs() {
  docs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkRequest::kHeadFieldNumber;
const int BulkRequest::kDocsFieldNumber;
const int BulkRequest::kPartitionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkRequest::BulkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_BulkRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BulkRequest)
}
BulkRequest::BulkRequest(const BulkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      docs_(from.docs_),
      partitions_(from.partitions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:BulkRequest)
}

void BulkRequest::SharedCtor() {
  head_ = NULL;
}

BulkRequest::~BulkRequest() {
  // @@protoc_insertion_point(destructor:BulkRequest)
  SharedDtor();
}

void BulkRequest::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void BulkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkRequest& BulkRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_BulkRequest.base);
  return *internal_default_instance();
}


void BulkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:BulkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docs_.Clear();
  partitions_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool BulkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BulkRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Document docs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_docs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 partitions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_partitions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_partitions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BulkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BulkRequest)
  return false;
#undef DO_
}

void BulkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BulkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated .Document docs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->docs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->docs(static_cast<int>(i)),
      output);
  }

  // repeated uint32 partitions = 3;
  if (this->partitions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _partitions_cached_byte_size_));
  }
  for (int i = 0, n = this->partitions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->partitions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BulkRequest)
}

::google::protobuf::uint8* BulkRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BulkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated .Document docs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->docs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->docs(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 partitions = 3;
  if (this->partitions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _partitions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->partitions_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BulkRequest)
  return target;
}

size_t BulkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BulkRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Document docs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->docs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->docs(static_cast<int>(i)));
    }
  }

  // repeated uint32 partitions = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->partitions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _partitions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BulkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BulkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BulkRequest)
    MergeFrom(*source);
  }
}

void BulkRequest::MergeFrom(const BulkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BulkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docs_.MergeFrom(from.docs_);
  partitions_.MergeFrom(from.partitions_);
  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
}

void BulkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BulkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkRequest::CopyFrom(const BulkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BulkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkRequest::IsInitialized() const {
  return true;
}

void BulkRequest::Swap(BulkRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkRequest::InternalSwap(BulkRequest* other) {
  using std::swap;
  CastToBase(&docs_)->InternalSwap(CastToBase(&other->docs_));
  partitions_.InternalSwap(&other->partitions_);
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForceMergeRequest::InitAsDefaultInstance() {
  ::_ForceMergeRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceMergeRequest::kHeadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceMergeRequest::ForceMergeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_ForceMergeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ForceMergeRequest)
}
ForceMergeRequest::ForceMergeRequest(const ForceMergeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ForceMergeRequest)
}

void ForceMergeRequest::SharedCtor() {
  head_ = NULL;
}

ForceMergeRequest::~ForceMergeRequest() {
  // @@protoc_insertion_point(destructor:ForceMergeRequest)
  SharedDtor();
}

void ForceMergeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void ForceMergeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForceMergeRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceMergeRequest& ForceMergeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_ForceMergeRequest.base);
  return *internal_default_instance();
}


void ForceMergeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ForceMergeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool ForceMergeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ForceMergeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ForceMergeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ForceMergeRequest)
  return false;
#undef DO_
}

void ForceMergeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ForceMergeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ForceMergeRequest)
}

::google::protobuf::uint8* ForceMergeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ForceMergeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ForceMergeRequest)
  return target;
}

size_t ForceMergeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ForceMergeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForceMergeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ForceMergeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceMergeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceMergeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ForceMergeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ForceMergeRequest)
    MergeFrom(*source);
  }
}

void ForceMergeRequest::MergeFrom(const ForceMergeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ForceMergeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
}

void ForceMergeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ForceMergeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceMergeRequest::CopyFrom(const ForceMergeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ForceMergeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceMergeRequest::IsInitialized() const {
  return true;
}

void ForceMergeRequest::Swap(ForceMergeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceMergeRequest::InternalSwap(ForceMergeRequest* other) {
  using std::swap;
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForceMergeRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlushRequest::InitAsDefaultInstance() {
  ::_FlushRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlushRequest::kHeadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlushRequest::FlushRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_FlushRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FlushRequest)
}
FlushRequest::FlushRequest(const FlushRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FlushRequest)
}

void FlushRequest::SharedCtor() {
  head_ = NULL;
}

FlushRequest::~FlushRequest() {
  // @@protoc_insertion_point(destructor:FlushRequest)
  SharedDtor();
}

void FlushRequest::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void FlushRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlushRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlushRequest& FlushRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_FlushRequest.base);
  return *internal_default_instance();
}


void FlushRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FlushRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool FlushRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FlushRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FlushRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FlushRequest)
  return false;
#undef DO_
}

void FlushRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FlushRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FlushRequest)
}

::google::protobuf::uint8* FlushRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FlushRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FlushRequest)
  return target;
}

size_t FlushRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FlushRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlushRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FlushRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FlushRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlushRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FlushRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FlushRequest)
    MergeFrom(*source);
  }
}

void FlushRequest::MergeFrom(const FlushRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FlushRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
}

void FlushRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FlushRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlushRequest::CopyFrom(const FlushRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FlushRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushRequest::IsInitialized() const {
  return true;
}

void FlushRequest::Swap(FlushRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlushRequest::InternalSwap(FlushRequest* other) {
  using std::swap;
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlushRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IndexRequest::InitAsDefaultInstance() {
  ::_IndexRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexRequest::kHeadFieldNumber;
const int IndexRequest::kDropBeforeRebuildFieldNumber;
const int IndexRequest::kLimitCpuFieldNumber;
const int IndexRequest::kDescribeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexRequest::IndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_IndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IndexRequest)
}
IndexRequest::IndexRequest(const IndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&drop_before_rebuild_, &from.drop_before_rebuild_,
    static_cast<size_t>(reinterpret_cast<char*>(&describe_) -
    reinterpret_cast<char*>(&drop_before_rebuild_)) + sizeof(describe_));
  // @@protoc_insertion_point(copy_constructor:IndexRequest)
}

void IndexRequest::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&describe_) -
      reinterpret_cast<char*>(&head_)) + sizeof(describe_));
}

IndexRequest::~IndexRequest() {
  // @@protoc_insertion_point(destructor:IndexRequest)
  SharedDtor();
}

void IndexRequest::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void IndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IndexRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexRequest& IndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_IndexRequest.base);
  return *internal_default_instance();
}


void IndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&drop_before_rebuild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&describe_) -
      reinterpret_cast<char*>(&drop_before_rebuild_)) + sizeof(describe_));
  _internal_metadata_.Clear();
}

bool IndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 drop_before_rebuild = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &drop_before_rebuild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limit_cpu = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_cpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 describe = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &describe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IndexRequest)
  return false;
#undef DO_
}

void IndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // int64 drop_before_rebuild = 2;
  if (this->drop_before_rebuild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->drop_before_rebuild(), output);
  }

  // int64 limit_cpu = 3;
  if (this->limit_cpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->limit_cpu(), output);
  }

  // int64 describe = 4;
  if (this->describe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->describe(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IndexRequest)
}

::google::protobuf::uint8* IndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // int64 drop_before_rebuild = 2;
  if (this->drop_before_rebuild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->drop_before_rebuild(), target);
  }

  // int64 limit_cpu = 3;
  if (this->limit_cpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->limit_cpu(), target);
  }

  // int64 describe = 4;
  if (this->describe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->describe(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexRequest)
  return target;
}

size_t IndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // int64 drop_before_rebuild = 2;
  if (this->drop_before_rebuild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->drop_before_rebuild());
  }

  // int64 limit_cpu = 3;
  if (this->limit_cpu() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limit_cpu());
  }

  // int64 describe = 4;
  if (this->describe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->describe());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexRequest)
    MergeFrom(*source);
  }
}

void IndexRequest::MergeFrom(const IndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
  if (from.drop_before_rebuild() != 0) {
    set_drop_before_rebuild(from.drop_before_rebuild());
  }
  if (from.limit_cpu() != 0) {
    set_limit_cpu(from.limit_cpu());
  }
  if (from.describe() != 0) {
    set_describe(from.describe());
  }
}

void IndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexRequest::CopyFrom(const IndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexRequest::IsInitialized() const {
  return true;
}

void IndexRequest::Swap(IndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexRequest::InternalSwap(IndexRequest* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(drop_before_rebuild_, other->drop_before_rebuild_);
  swap(limit_cpu_, other->limit_cpu_);
  swap(describe_, other->describe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IndexRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResponse::InitAsDefaultInstance() {
  ::_GetResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
}
void GetResponse::clear_items() {
  items_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kHeadFieldNumber;
const int GetResponse::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_GetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GetResponse)
}

void GetResponse::SharedCtor() {
  head_ = NULL;
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_GetResponse.base);
  return *internal_default_instance();
}


void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated .Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated .Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Item items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteResponse::InitAsDefaultInstance() {
  ::_DeleteResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
}
void DeleteResponse::clear_items() {
  items_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResponse::kHeadFieldNumber;
const int DeleteResponse::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResponse::DeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_DeleteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteResponse)
}
DeleteResponse::DeleteResponse(const DeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DeleteResponse)
}

void DeleteResponse::SharedCtor() {
  head_ = NULL;
}

DeleteResponse::~DeleteResponse() {
  // @@protoc_insertion_point(destructor:DeleteResponse)
  SharedDtor();
}

void DeleteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void DeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResponse& DeleteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_DeleteResponse.base);
  return *internal_default_instance();
}


void DeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteResponse)
  return false;
#undef DO_
}

void DeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated .Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteResponse)
}

::google::protobuf::uint8* DeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated .Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteResponse)
  return target;
}

size_t DeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Item items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteResponse)
    MergeFrom(*source);
  }
}

void DeleteResponse::MergeFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
}

void DeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResponse::CopyFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponse::IsInitialized() const {
  return true;
}

void DeleteResponse::Swap(DeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResponse::InternalSwap(DeleteResponse* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkResponse::InitAsDefaultInstance() {
  ::_BulkResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
}
void BulkResponse::clear_items() {
  items_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkResponse::kHeadFieldNumber;
const int BulkResponse::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkResponse::BulkResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_BulkResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BulkResponse)
}
BulkResponse::BulkResponse(const BulkResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:BulkResponse)
}

void BulkResponse::SharedCtor() {
  head_ = NULL;
}

BulkResponse::~BulkResponse() {
  // @@protoc_insertion_point(destructor:BulkResponse)
  SharedDtor();
}

void BulkResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void BulkResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkResponse& BulkResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_BulkResponse.base);
  return *internal_default_instance();
}


void BulkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:BulkResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool BulkResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BulkResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BulkResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BulkResponse)
  return false;
#undef DO_
}

void BulkResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BulkResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated .Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BulkResponse)
}

::google::protobuf::uint8* BulkResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BulkResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated .Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BulkResponse)
  return target;
}

size_t BulkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BulkResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Item items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BulkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BulkResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BulkResponse)
    MergeFrom(*source);
  }
}

void BulkResponse::MergeFrom(const BulkResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BulkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
}

void BulkResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BulkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkResponse::CopyFrom(const BulkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BulkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkResponse::IsInitialized() const {
  return true;
}

void BulkResponse::Swap(BulkResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkResponse::InternalSwap(BulkResponse* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForceMergeResponse::InitAsDefaultInstance() {
  ::_ForceMergeResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
  ::_ForceMergeResponse_default_instance_._instance.get_mutable()->shards_ = const_cast< ::SearchStatus*>(
      ::SearchStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceMergeResponse::kHeadFieldNumber;
const int ForceMergeResponse::kShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceMergeResponse::ForceMergeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_ForceMergeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ForceMergeResponse)
}
ForceMergeResponse::ForceMergeResponse(const ForceMergeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  if (from.has_shards()) {
    shards_ = new ::SearchStatus(*from.shards_);
  } else {
    shards_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ForceMergeResponse)
}

void ForceMergeResponse::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shards_) -
      reinterpret_cast<char*>(&head_)) + sizeof(shards_));
}

ForceMergeResponse::~ForceMergeResponse() {
  // @@protoc_insertion_point(destructor:ForceMergeResponse)
  SharedDtor();
}

void ForceMergeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete shards_;
}

void ForceMergeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForceMergeResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceMergeResponse& ForceMergeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_ForceMergeResponse.base);
  return *internal_default_instance();
}


void ForceMergeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ForceMergeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && shards_ != NULL) {
    delete shards_;
  }
  shards_ = NULL;
  _internal_metadata_.Clear();
}

bool ForceMergeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ForceMergeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SearchStatus shards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ForceMergeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ForceMergeResponse)
  return false;
#undef DO_
}

void ForceMergeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ForceMergeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_shards(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ForceMergeResponse)
}

::google::protobuf::uint8* ForceMergeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ForceMergeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_shards(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ForceMergeResponse)
  return target;
}

size_t ForceMergeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ForceMergeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shards_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForceMergeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ForceMergeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceMergeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceMergeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ForceMergeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ForceMergeResponse)
    MergeFrom(*source);
  }
}

void ForceMergeResponse::MergeFrom(const ForceMergeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ForceMergeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
  if (from.has_shards()) {
    mutable_shards()->::SearchStatus::MergeFrom(from.shards());
  }
}

void ForceMergeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ForceMergeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceMergeResponse::CopyFrom(const ForceMergeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ForceMergeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceMergeResponse::IsInitialized() const {
  return true;
}

void ForceMergeResponse::Swap(ForceMergeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceMergeResponse::InternalSwap(ForceMergeResponse* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(shards_, other->shards_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForceMergeResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelByQueryeResponse::InitAsDefaultInstance() {
  ::_DelByQueryeResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelByQueryeResponse::kHeadFieldNumber;
const int DelByQueryeResponse::kDelNumFieldNumber;
const int DelByQueryeResponse::kIdsStrFieldNumber;
const int DelByQueryeResponse::kIdsLongFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelByQueryeResponse::DelByQueryeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_DelByQueryeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DelByQueryeResponse)
}
DelByQueryeResponse::DelByQueryeResponse(const DelByQueryeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ids_str_(from.ids_str_),
      ids_long_(from.ids_long_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  delnum_ = from.delnum_;
  // @@protoc_insertion_point(copy_constructor:DelByQueryeResponse)
}

void DelByQueryeResponse::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delnum_) -
      reinterpret_cast<char*>(&head_)) + sizeof(delnum_));
}

DelByQueryeResponse::~DelByQueryeResponse() {
  // @@protoc_insertion_point(destructor:DelByQueryeResponse)
  SharedDtor();
}

void DelByQueryeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void DelByQueryeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DelByQueryeResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelByQueryeResponse& DelByQueryeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_DelByQueryeResponse.base);
  return *internal_default_instance();
}


void DelByQueryeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DelByQueryeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_str_.Clear();
  ids_long_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  delnum_ = 0;
  _internal_metadata_.Clear();
}

bool DelByQueryeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DelByQueryeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DelNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ids_str = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ids_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ids_str(this->ids_str_size() - 1).data(),
            static_cast<int>(this->ids_str(this->ids_str_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DelByQueryeResponse.ids_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ids_long = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ids_long())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_ids_long())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DelByQueryeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DelByQueryeResponse)
  return false;
#undef DO_
}

void DelByQueryeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DelByQueryeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // int32 DelNum = 2;
  if (this->delnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delnum(), output);
  }

  // repeated string ids_str = 3;
  for (int i = 0, n = this->ids_str_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ids_str(i).data(), static_cast<int>(this->ids_str(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DelByQueryeResponse.ids_str");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ids_str(i), output);
  }

  // repeated int64 ids_long = 4;
  if (this->ids_long_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ids_long_cached_byte_size_));
  }
  for (int i = 0, n = this->ids_long_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ids_long(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DelByQueryeResponse)
}

::google::protobuf::uint8* DelByQueryeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DelByQueryeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // int32 DelNum = 2;
  if (this->delnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delnum(), target);
  }

  // repeated string ids_str = 3;
  for (int i = 0, n = this->ids_str_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ids_str(i).data(), static_cast<int>(this->ids_str(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DelByQueryeResponse.ids_str");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->ids_str(i), target);
  }

  // repeated int64 ids_long = 4;
  if (this->ids_long_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _ids_long_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->ids_long_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DelByQueryeResponse)
  return target;
}

size_t DelByQueryeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DelByQueryeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string ids_str = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ids_str_size());
  for (int i = 0, n = this->ids_str_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ids_str(i));
  }

  // repeated int64 ids_long = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ids_long_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ids_long_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // int32 DelNum = 2;
  if (this->delnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelByQueryeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DelByQueryeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DelByQueryeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelByQueryeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DelByQueryeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DelByQueryeResponse)
    MergeFrom(*source);
  }
}

void DelByQueryeResponse::MergeFrom(const DelByQueryeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DelByQueryeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_str_.MergeFrom(from.ids_str_);
  ids_long_.MergeFrom(from.ids_long_);
  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
  if (from.delnum() != 0) {
    set_delnum(from.delnum());
  }
}

void DelByQueryeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DelByQueryeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelByQueryeResponse::CopyFrom(const DelByQueryeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DelByQueryeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelByQueryeResponse::IsInitialized() const {
  return true;
}

void DelByQueryeResponse::Swap(DelByQueryeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelByQueryeResponse::InternalSwap(DelByQueryeResponse* other) {
  using std::swap;
  ids_str_.InternalSwap(CastToBase(&other->ids_str_));
  ids_long_.InternalSwap(&other->ids_long_);
  swap(head_, other->head_);
  swap(delnum_, other->delnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DelByQueryeResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlushResponse::InitAsDefaultInstance() {
  ::_FlushResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
  ::_FlushResponse_default_instance_._instance.get_mutable()->shards_ = const_cast< ::SearchStatus*>(
      ::SearchStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlushResponse::kHeadFieldNumber;
const int FlushResponse::kShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlushResponse::FlushResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_FlushResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FlushResponse)
}
FlushResponse::FlushResponse(const FlushResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  if (from.has_shards()) {
    shards_ = new ::SearchStatus(*from.shards_);
  } else {
    shards_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FlushResponse)
}

void FlushResponse::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shards_) -
      reinterpret_cast<char*>(&head_)) + sizeof(shards_));
}

FlushResponse::~FlushResponse() {
  // @@protoc_insertion_point(destructor:FlushResponse)
  SharedDtor();
}

void FlushResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete shards_;
}

void FlushResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlushResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlushResponse& FlushResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_FlushResponse.base);
  return *internal_default_instance();
}


void FlushResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FlushResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && shards_ != NULL) {
    delete shards_;
  }
  shards_ = NULL;
  _internal_metadata_.Clear();
}

bool FlushResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FlushResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SearchStatus shards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FlushResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FlushResponse)
  return false;
#undef DO_
}

void FlushResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FlushResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_shards(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FlushResponse)
}

::google::protobuf::uint8* FlushResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FlushResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_shards(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FlushResponse)
  return target;
}

size_t FlushResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FlushResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shards_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlushResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FlushResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FlushResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlushResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FlushResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FlushResponse)
    MergeFrom(*source);
  }
}

void FlushResponse::MergeFrom(const FlushResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FlushResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
  if (from.has_shards()) {
    mutable_shards()->::SearchStatus::MergeFrom(from.shards());
  }
}

void FlushResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FlushResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlushResponse::CopyFrom(const FlushResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FlushResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushResponse::IsInitialized() const {
  return true;
}

void FlushResponse::Swap(FlushResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlushResponse::InternalSwap(FlushResponse* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(shards_, other->shards_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlushResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IndexResponse::InitAsDefaultInstance() {
  ::_IndexResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
  ::_IndexResponse_default_instance_._instance.get_mutable()->shards_ = const_cast< ::SearchStatus*>(
      ::SearchStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexResponse::kHeadFieldNumber;
const int IndexResponse::kShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexResponse::IndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_IndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IndexResponse)
}
IndexResponse::IndexResponse(const IndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  if (from.has_shards()) {
    shards_ = new ::SearchStatus(*from.shards_);
  } else {
    shards_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:IndexResponse)
}

void IndexResponse::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shards_) -
      reinterpret_cast<char*>(&head_)) + sizeof(shards_));
}

IndexResponse::~IndexResponse() {
  // @@protoc_insertion_point(destructor:IndexResponse)
  SharedDtor();
}

void IndexResponse::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete shards_;
}

void IndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IndexResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexResponse& IndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_IndexResponse.base);
  return *internal_default_instance();
}


void IndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && shards_ != NULL) {
    delete shards_;
  }
  shards_ = NULL;
  _internal_metadata_.Clear();
}

bool IndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SearchStatus shards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IndexResponse)
  return false;
#undef DO_
}

void IndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_shards(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IndexResponse)
}

::google::protobuf::uint8* IndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_shards(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexResponse)
  return target;
}

size_t IndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // .SearchStatus shards = 2;
  if (this->has_shards()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shards_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexResponse)
    MergeFrom(*source);
  }
}

void IndexResponse::MergeFrom(const IndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
  if (from.has_shards()) {
    mutable_shards()->::SearchStatus::MergeFrom(from.shards());
  }
}

void IndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexResponse::CopyFrom(const IndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexResponse::IsInitialized() const {
  return true;
}

void IndexResponse::Swap(IndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexResponse::InternalSwap(IndexResponse* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(shards_, other->shards_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IndexResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TermFilter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TermFilter::kFieldFieldNumber;
const int TermFilter::kValueFieldNumber;
const int TermFilter::kIsUnionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TermFilter::TermFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_TermFilter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TermFilter)
}
TermFilter::TermFilter(const TermFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field().size() > 0) {
    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  is_union_ = from.is_union_;
  // @@protoc_insertion_point(copy_constructor:TermFilter)
}

void TermFilter::SharedCtor() {
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_union_ = 0;
}

TermFilter::~TermFilter() {
  // @@protoc_insertion_point(destructor:TermFilter)
  SharedDtor();
}

void TermFilter::SharedDtor() {
  field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TermFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TermFilter::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TermFilter& TermFilter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_TermFilter.base);
  return *internal_default_instance();
}


void TermFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:TermFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_union_ = 0;
  _internal_metadata_.Clear();
}

bool TermFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TermFilter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field().data(), static_cast<int>(this->field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TermFilter.field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_union = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_union_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TermFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TermFilter)
  return false;
#undef DO_
}

void TermFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TermFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TermFilter.field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // int32 is_union = 3;
  if (this->is_union() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_union(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TermFilter)
}

::google::protobuf::uint8* TermFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TermFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TermFilter.field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // int32 is_union = 3;
  if (this->is_union() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_union(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TermFilter)
  return target;
}

size_t TermFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TermFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int32 is_union = 3;
  if (this->is_union() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_union());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TermFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TermFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const TermFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TermFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TermFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TermFilter)
    MergeFrom(*source);
  }
}

void TermFilter::MergeFrom(const TermFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TermFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field().size() > 0) {

    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.is_union() != 0) {
    set_is_union(from.is_union());
  }
}

void TermFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TermFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TermFilter::CopyFrom(const TermFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TermFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TermFilter::IsInitialized() const {
  return true;
}

void TermFilter::Swap(TermFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TermFilter::InternalSwap(TermFilter* other) {
  using std::swap;
  field_.Swap(&other->field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_union_, other->is_union_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TermFilter::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RangeFilter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RangeFilter::kFieldFieldNumber;
const int RangeFilter::kLowerValueFieldNumber;
const int RangeFilter::kUpperValueFieldNumber;
const int RangeFilter::kIncludeLowerFieldNumber;
const int RangeFilter::kIncludeUpperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RangeFilter::RangeFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_RangeFilter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RangeFilter)
}
RangeFilter::RangeFilter(const RangeFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field().size() > 0) {
    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  lower_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lower_value().size() > 0) {
    lower_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lower_value_);
  }
  upper_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.upper_value().size() > 0) {
    upper_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upper_value_);
  }
  ::memcpy(&include_lower_, &from.include_lower_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_upper_) -
    reinterpret_cast<char*>(&include_lower_)) + sizeof(include_upper_));
  // @@protoc_insertion_point(copy_constructor:RangeFilter)
}

void RangeFilter::SharedCtor() {
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lower_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upper_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&include_lower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_upper_) -
      reinterpret_cast<char*>(&include_lower_)) + sizeof(include_upper_));
}

RangeFilter::~RangeFilter() {
  // @@protoc_insertion_point(destructor:RangeFilter)
  SharedDtor();
}

void RangeFilter::SharedDtor() {
  field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lower_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upper_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RangeFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RangeFilter::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RangeFilter& RangeFilter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_RangeFilter.base);
  return *internal_default_instance();
}


void RangeFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:RangeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lower_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upper_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&include_lower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_upper_) -
      reinterpret_cast<char*>(&include_lower_)) + sizeof(include_upper_));
  _internal_metadata_.Clear();
}

bool RangeFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RangeFilter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field().data(), static_cast<int>(this->field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RangeFilter.field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes lower_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_lower_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes upper_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_upper_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool include_lower = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_lower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool include_upper = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_upper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RangeFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RangeFilter)
  return false;
#undef DO_
}

void RangeFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RangeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RangeFilter.field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field(), output);
  }

  // bytes lower_value = 2;
  if (this->lower_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->lower_value(), output);
  }

  // bytes upper_value = 3;
  if (this->upper_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->upper_value(), output);
  }

  // bool include_lower = 4;
  if (this->include_lower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->include_lower(), output);
  }

  // bool include_upper = 5;
  if (this->include_upper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->include_upper(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RangeFilter)
}

::google::protobuf::uint8* RangeFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RangeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RangeFilter.field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field(), target);
  }

  // bytes lower_value = 2;
  if (this->lower_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->lower_value(), target);
  }

  // bytes upper_value = 3;
  if (this->upper_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->upper_value(), target);
  }

  // bool include_lower = 4;
  if (this->include_lower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->include_lower(), target);
  }

  // bool include_upper = 5;
  if (this->include_upper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->include_upper(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RangeFilter)
  return target;
}

size_t RangeFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RangeFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field());
  }

  // bytes lower_value = 2;
  if (this->lower_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->lower_value());
  }

  // bytes upper_value = 3;
  if (this->upper_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->upper_value());
  }

  // bool include_lower = 4;
  if (this->include_lower() != 0) {
    total_size += 1 + 1;
  }

  // bool include_upper = 5;
  if (this->include_upper() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RangeFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RangeFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const RangeFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RangeFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RangeFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RangeFilter)
    MergeFrom(*source);
  }
}

void RangeFilter::MergeFrom(const RangeFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RangeFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field().size() > 0) {

    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  if (from.lower_value().size() > 0) {

    lower_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lower_value_);
  }
  if (from.upper_value().size() > 0) {

    upper_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upper_value_);
  }
  if (from.include_lower() != 0) {
    set_include_lower(from.include_lower());
  }
  if (from.include_upper() != 0) {
    set_include_upper(from.include_upper());
  }
}

void RangeFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RangeFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RangeFilter::CopyFrom(const RangeFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RangeFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RangeFilter::IsInitialized() const {
  return true;
}

void RangeFilter::Swap(RangeFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RangeFilter::InternalSwap(RangeFilter* other) {
  using std::swap;
  field_.Swap(&other->field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lower_value_.Swap(&other->lower_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  upper_value_.Swap(&other->upper_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(include_lower_, other->include_lower_);
  swap(include_upper_, other->include_upper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RangeFilter::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SortField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SortField::kFieldFieldNumber;
const int SortField::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SortField::SortField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_SortField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SortField)
}
SortField::SortField(const SortField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field().size() > 0) {
    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:SortField)
}

void SortField::SharedCtor() {
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = false;
}

SortField::~SortField() {
  // @@protoc_insertion_point(destructor:SortField)
  SharedDtor();
}

void SortField::SharedDtor() {
  field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SortField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SortField::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SortField& SortField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_SortField.base);
  return *internal_default_instance();
}


void SortField::Clear() {
// @@protoc_insertion_point(message_clear_start:SortField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = false;
  _internal_metadata_.Clear();
}

bool SortField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SortField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field().data(), static_cast<int>(this->field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SortField.field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SortField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SortField)
  return false;
#undef DO_
}

void SortField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SortField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SortField.field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field(), output);
  }

  // bool type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SortField)
}

::google::protobuf::uint8* SortField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SortField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SortField.field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field(), target);
  }

  // bool type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SortField)
  return target;
}

size_t SortField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SortField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field());
  }

  // bool type = 2;
  if (this->type() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SortField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SortField)
  GOOGLE_DCHECK_NE(&from, this);
  const SortField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SortField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SortField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SortField)
    MergeFrom(*source);
  }
}

void SortField::MergeFrom(const SortField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SortField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field().size() > 0) {

    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SortField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SortField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SortField::CopyFrom(const SortField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SortField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SortField::IsInitialized() const {
  return true;
}

void SortField::Swap(SortField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SortField::InternalSwap(SortField* other) {
  using std::swap;
  field_.Swap(&other->field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SortField::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VectorQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorQuery::kNameFieldNumber;
const int VectorQuery::kValueFieldNumber;
const int VectorQuery::kMinScoreFieldNumber;
const int VectorQuery::kMaxScoreFieldNumber;
const int VectorQuery::kFormatFieldNumber;
const int VectorQuery::kIndexTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorQuery::VectorQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_VectorQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VectorQuery)
}
VectorQuery::VectorQuery(const VectorQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.format().size() > 0) {
    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  index_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_type().size() > 0) {
    index_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_type_);
  }
  ::memcpy(&min_score_, &from.min_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_score_) -
    reinterpret_cast<char*>(&min_score_)) + sizeof(max_score_));
  // @@protoc_insertion_point(copy_constructor:VectorQuery)
}

void VectorQuery::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&min_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_score_) -
      reinterpret_cast<char*>(&min_score_)) + sizeof(max_score_));
}

VectorQuery::~VectorQuery() {
  // @@protoc_insertion_point(destructor:VectorQuery)
  SharedDtor();
}

void VectorQuery::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VectorQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VectorQuery::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VectorQuery& VectorQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_VectorQuery.base);
  return *internal_default_instance();
}


void VectorQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:VectorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&min_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_score_) -
      reinterpret_cast<char*>(&min_score_)) + sizeof(max_score_));
  _internal_metadata_.Clear();
}

bool VectorQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VectorQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "VectorQuery.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double min_score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max_score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string format = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->format().data(), static_cast<int>(this->format().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "VectorQuery.format"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_type().data(), static_cast<int>(this->index_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "VectorQuery.index_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VectorQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VectorQuery)
  return false;
#undef DO_
}

void VectorQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VectorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorQuery.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // double min_score = 3;
  if (this->min_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->min_score(), output);
  }

  // double max_score = 4;
  if (this->max_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->max_score(), output);
  }

  // string format = 5;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorQuery.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->format(), output);
  }

  // string index_type = 6;
  if (this->index_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_type().data(), static_cast<int>(this->index_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorQuery.index_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->index_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VectorQuery)
}

::google::protobuf::uint8* VectorQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VectorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorQuery.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // double min_score = 3;
  if (this->min_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->min_score(), target);
  }

  // double max_score = 4;
  if (this->max_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->max_score(), target);
  }

  // string format = 5;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorQuery.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->format(), target);
  }

  // string index_type = 6;
  if (this->index_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_type().data(), static_cast<int>(this->index_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorQuery.index_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->index_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VectorQuery)
  return target;
}

size_t VectorQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VectorQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // string format = 5;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());
  }

  // string index_type = 6;
  if (this->index_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_type());
  }

  // double min_score = 3;
  if (this->min_score() != 0) {
    total_size += 1 + 8;
  }

  // double max_score = 4;
  if (this->max_score() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VectorQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VectorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VectorQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VectorQuery)
    MergeFrom(*source);
  }
}

void VectorQuery::MergeFrom(const VectorQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VectorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.format().size() > 0) {

    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  if (from.index_type().size() > 0) {

    index_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_type_);
  }
  if (from.min_score() != 0) {
    set_min_score(from.min_score());
  }
  if (from.max_score() != 0) {
    set_max_score(from.max_score());
  }
}

void VectorQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VectorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorQuery::CopyFrom(const VectorQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VectorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorQuery::IsInitialized() const {
  return true;
}

void VectorQuery::Swap(VectorQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorQuery::InternalSwap(VectorQuery* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  format_.Swap(&other->format_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  index_type_.Swap(&other->index_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(min_score_, other->min_score_);
  swap(max_score_, other->max_score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VectorQuery::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IndexParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexParameters::kMetricTypeFieldNumber;
const int IndexParameters::kNprobeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexParameters::IndexParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_IndexParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IndexParameters)
}
IndexParameters::IndexParameters(const IndexParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&metric_type_, &from.metric_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&nprobe_) -
    reinterpret_cast<char*>(&metric_type_)) + sizeof(nprobe_));
  // @@protoc_insertion_point(copy_constructor:IndexParameters)
}

void IndexParameters::SharedCtor() {
  ::memset(&metric_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nprobe_) -
      reinterpret_cast<char*>(&metric_type_)) + sizeof(nprobe_));
}

IndexParameters::~IndexParameters() {
  // @@protoc_insertion_point(destructor:IndexParameters)
  SharedDtor();
}

void IndexParameters::SharedDtor() {
}

void IndexParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IndexParameters::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexParameters& IndexParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_IndexParameters.base);
  return *internal_default_instance();
}


void IndexParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&metric_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nprobe_) -
      reinterpret_cast<char*>(&metric_type_)) + sizeof(nprobe_));
  _internal_metadata_.Clear();
}

bool IndexParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IndexParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IndexParameters.DistanceMetricType metric_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_metric_type(static_cast< ::IndexParameters_DistanceMetricType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nprobe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nprobe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IndexParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IndexParameters)
  return false;
#undef DO_
}

void IndexParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IndexParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IndexParameters.DistanceMetricType metric_type = 1;
  if (this->metric_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->metric_type(), output);
  }

  // int32 nprobe = 2;
  if (this->nprobe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nprobe(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IndexParameters)
}

::google::protobuf::uint8* IndexParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IndexParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IndexParameters.DistanceMetricType metric_type = 1;
  if (this->metric_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->metric_type(), target);
  }

  // int32 nprobe = 2;
  if (this->nprobe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nprobe(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexParameters)
  return target;
}

size_t IndexParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .IndexParameters.DistanceMetricType metric_type = 1;
  if (this->metric_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->metric_type());
  }

  // int32 nprobe = 2;
  if (this->nprobe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nprobe());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexParameters)
    MergeFrom(*source);
  }
}

void IndexParameters::MergeFrom(const IndexParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_type() != 0) {
    set_metric_type(from.metric_type());
  }
  if (from.nprobe() != 0) {
    set_nprobe(from.nprobe());
  }
}

void IndexParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexParameters::CopyFrom(const IndexParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexParameters::IsInitialized() const {
  return true;
}

void IndexParameters::Swap(IndexParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexParameters::InternalSwap(IndexParameters* other) {
  using std::swap;
  swap(metric_type_, other->metric_type_);
  swap(nprobe_, other->nprobe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IndexParameters::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

QueryRequest_SortFieldMapEntry_DoNotUse::QueryRequest_SortFieldMapEntry_DoNotUse() {}
QueryRequest_SortFieldMapEntry_DoNotUse::QueryRequest_SortFieldMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QueryRequest_SortFieldMapEntry_DoNotUse::MergeFrom(const QueryRequest_SortFieldMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QueryRequest_SortFieldMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[22];
}
void QueryRequest_SortFieldMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void QueryRequest::InitAsDefaultInstance() {
  ::_QueryRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRequest::kHeadFieldNumber;
const int QueryRequest::kDocumentIdsFieldNumber;
const int QueryRequest::kPartitionIdFieldNumber;
const int QueryRequest::kNextFieldNumber;
const int QueryRequest::kRangeFiltersFieldNumber;
const int QueryRequest::kTermFiltersFieldNumber;
const int QueryRequest::kFieldsFieldNumber;
const int QueryRequest::kIsVectorValueFieldNumber;
const int QueryRequest::kLimitFieldNumber;
const int QueryRequest::kPageSizeFieldNumber;
const int QueryRequest::kLoadBalanceFieldNumber;
const int QueryRequest::kSortFieldMapFieldNumber;
const int QueryRequest::kSortFieldsFieldNumber;
const int QueryRequest::kTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRequest::QueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_QueryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryRequest)
}
QueryRequest::QueryRequest(const QueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      document_ids_(from.document_ids_),
      range_filters_(from.range_filters_),
      term_filters_(from.term_filters_),
      fields_(from.fields_),
      sort_fields_(from.sort_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sort_field_map_.MergeFrom(from.sort_field_map_);
  load_balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.load_balance().size() > 0) {
    load_balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.load_balance_);
  }
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&partition_id_, &from.partition_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&partition_id_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:QueryRequest)
}

void QueryRequest::SharedCtor() {
  load_balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&head_)) + sizeof(page_size_));
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  load_balance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete head_;
}

void QueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRequest& QueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_QueryRequest.base);
  return *internal_default_instance();
}


void QueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  document_ids_.Clear();
  range_filters_.Clear();
  term_filters_.Clear();
  fields_.Clear();
  sort_field_map_.Clear();
  sort_fields_.Clear();
  load_balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&partition_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&partition_id_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool QueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string document_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_document_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->document_ids(this->document_ids_size() - 1).data(),
            static_cast<int>(this->document_ids(this->document_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QueryRequest.document_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 partition_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partition_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool next = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &next_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RangeFilter range_filters = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_range_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TermFilter term_filters = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_term_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fields = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fields(this->fields_size() - 1).data(),
            static_cast<int>(this->fields(this->fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QueryRequest.fields"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_vector_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vector_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string load_balance = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_load_balance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->load_balance().data(), static_cast<int>(this->load_balance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QueryRequest.load_balance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> sort_field_map = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          QueryRequest_SortFieldMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QueryRequest_SortFieldMapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&sort_field_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QueryRequest.SortFieldMapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QueryRequest.SortFieldMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SortField sort_fields = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sort_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool trace = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryRequest)
  return false;
#undef DO_
}

void QueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated string document_ids = 2;
  for (int i = 0, n = this->document_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->document_ids(i).data(), static_cast<int>(this->document_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QueryRequest.document_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->document_ids(i), output);
  }

  // int32 partition_id = 3;
  if (this->partition_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partition_id(), output);
  }

  // bool next = 4;
  if (this->next() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->next(), output);
  }

  // repeated .RangeFilter range_filters = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->range_filters(static_cast<int>(i)),
      output);
  }

  // repeated .TermFilter term_filters = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->term_filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->term_filters(static_cast<int>(i)),
      output);
  }

  // repeated string fields = 7;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QueryRequest.fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->fields(i), output);
  }

  // bool is_vector_value = 8;
  if (this->is_vector_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_vector_value(), output);
  }

  // int32 limit = 9;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->limit(), output);
  }

  // int32 page_size = 10;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->page_size(), output);
  }

  // string load_balance = 11;
  if (this->load_balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_balance().data(), static_cast<int>(this->load_balance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QueryRequest.load_balance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->load_balance(), output);
  }

  // map<string, string> sort_field_map = 12;
  if (!this->sort_field_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "QueryRequest.SortFieldMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "QueryRequest.SortFieldMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->sort_field_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sort_field_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QueryRequest_SortFieldMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QueryRequest_SortFieldMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .SortField sort_fields = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sort_fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->sort_fields(static_cast<int>(i)),
      output);
  }

  // bool trace = 14;
  if (this->trace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->trace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryRequest)
}

::google::protobuf::uint8* QueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated string document_ids = 2;
  for (int i = 0, n = this->document_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->document_ids(i).data(), static_cast<int>(this->document_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QueryRequest.document_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->document_ids(i), target);
  }

  // int32 partition_id = 3;
  if (this->partition_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partition_id(), target);
  }

  // bool next = 4;
  if (this->next() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->next(), target);
  }

  // repeated .RangeFilter range_filters = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->range_filters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TermFilter term_filters = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->term_filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->term_filters(static_cast<int>(i)), deterministic, target);
  }

  // repeated string fields = 7;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QueryRequest.fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->fields(i), target);
  }

  // bool is_vector_value = 8;
  if (this->is_vector_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_vector_value(), target);
  }

  // int32 limit = 9;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->limit(), target);
  }

  // int32 page_size = 10;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->page_size(), target);
  }

  // string load_balance = 11;
  if (this->load_balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_balance().data(), static_cast<int>(this->load_balance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QueryRequest.load_balance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->load_balance(), target);
  }

  // map<string, string> sort_field_map = 12;
  if (!this->sort_field_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "QueryRequest.SortFieldMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "QueryRequest.SortFieldMapEntry.value");
      }
    };

    if (deterministic &&
        this->sort_field_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sort_field_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QueryRequest_SortFieldMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QueryRequest_SortFieldMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .SortField sort_fields = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sort_fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->sort_fields(static_cast<int>(i)), deterministic, target);
  }

  // bool trace = 14;
  if (this->trace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->trace(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryRequest)
  return target;
}

size_t QueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string document_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->document_ids_size());
  for (int i = 0, n = this->document_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->document_ids(i));
  }

  // repeated .RangeFilter range_filters = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->range_filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->range_filters(static_cast<int>(i)));
    }
  }

  // repeated .TermFilter term_filters = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->term_filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->term_filters(static_cast<int>(i)));
    }
  }

  // repeated string fields = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fields_size());
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fields(i));
  }

  // map<string, string> sort_field_map = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sort_field_map_size());
  {
    ::std::unique_ptr<QueryRequest_SortFieldMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->sort_field_map().begin();
        it != this->sort_field_map().end(); ++it) {
      entry.reset(sort_field_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .SortField sort_fields = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->sort_fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sort_fields(static_cast<int>(i)));
    }
  }

  // string load_balance = 11;
  if (this->load_balance().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->load_balance());
  }

  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // int32 partition_id = 3;
  if (this->partition_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partition_id());
  }

  // bool next = 4;
  if (this->next() != 0) {
    total_size += 1 + 1;
  }

  // bool is_vector_value = 8;
  if (this->is_vector_value() != 0) {
    total_size += 1 + 1;
  }

  // bool trace = 14;
  if (this->trace() != 0) {
    total_size += 1 + 1;
  }

  // int32 limit = 9;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // int32 page_size = 10;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryRequest)
    MergeFrom(*source);
  }
}

void QueryRequest::MergeFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  document_ids_.MergeFrom(from.document_ids_);
  range_filters_.MergeFrom(from.range_filters_);
  term_filters_.MergeFrom(from.term_filters_);
  fields_.MergeFrom(from.fields_);
  sort_field_map_.MergeFrom(from.sort_field_map_);
  sort_fields_.MergeFrom(from.sort_fields_);
  if (from.load_balance().size() > 0) {

    load_balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.load_balance_);
  }
  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
  if (from.partition_id() != 0) {
    set_partition_id(from.partition_id());
  }
  if (from.next() != 0) {
    set_next(from.next());
  }
  if (from.is_vector_value() != 0) {
    set_is_vector_value(from.is_vector_value());
  }
  if (from.trace() != 0) {
    set_trace(from.trace());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void QueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRequest::CopyFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRequest::IsInitialized() const {
  return true;
}

void QueryRequest::Swap(QueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRequest::InternalSwap(QueryRequest* other) {
  using std::swap;
  document_ids_.InternalSwap(CastToBase(&other->document_ids_));
  CastToBase(&range_filters_)->InternalSwap(CastToBase(&other->range_filters_));
  CastToBase(&term_filters_)->InternalSwap(CastToBase(&other->term_filters_));
  fields_.InternalSwap(CastToBase(&other->fields_));
  sort_field_map_.Swap(&other->sort_field_map_);
  CastToBase(&sort_fields_)->InternalSwap(CastToBase(&other->sort_fields_));
  load_balance_.Swap(&other->load_balance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(head_, other->head_);
  swap(partition_id_, other->partition_id_);
  swap(next_, other->next_);
  swap(is_vector_value_, other->is_vector_value_);
  swap(trace_, other->trace_);
  swap(limit_, other->limit_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SearchRequest_SortFieldMapEntry_DoNotUse::SearchRequest_SortFieldMapEntry_DoNotUse() {}
SearchRequest_SortFieldMapEntry_DoNotUse::SearchRequest_SortFieldMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SearchRequest_SortFieldMapEntry_DoNotUse::MergeFrom(const SearchRequest_SortFieldMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SearchRequest_SortFieldMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[24];
}
void SearchRequest_SortFieldMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SearchRequest::InitAsDefaultInstance() {
  ::_SearchRequest_default_instance_._instance.get_mutable()->head_ = const_cast< ::RequestHead*>(
      ::RequestHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kHeadFieldNumber;
const int SearchRequest::kReqNumFieldNumber;
const int SearchRequest::kTopNFieldNumber;
const int SearchRequest::kIsBruteSearchFieldNumber;
const int SearchRequest::kVecFieldsFieldNumber;
const int SearchRequest::kFieldsFieldNumber;
const int SearchRequest::kRangeFiltersFieldNumber;
const int SearchRequest::kTermFiltersFieldNumber;
const int SearchRequest::kIndexParamsFieldNumber;
const int SearchRequest::kMultiVectorRankFieldNumber;
const int SearchRequest::kL2SqrtFieldNumber;
const int SearchRequest::kIsVectorValueFieldNumber;
const int SearchRequest::kSortFieldMapFieldNumber;
const int SearchRequest::kSortFieldsFieldNumber;
const int SearchRequest::kRankerFieldNumber;
const int SearchRequest::kTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vec_fields_(from.vec_fields_),
      fields_(from.fields_),
      range_filters_(from.range_filters_),
      term_filters_(from.term_filters_),
      sort_fields_(from.sort_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sort_field_map_.MergeFrom(from.sort_field_map_);
  index_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_params().size() > 0) {
    index_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_params_);
  }
  ranker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ranker().size() > 0) {
    ranker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ranker_);
  }
  if (from.has_head()) {
    head_ = new ::RequestHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&req_num_, &from.req_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&trace_) -
    reinterpret_cast<char*>(&req_num_)) + sizeof(trace_));
  // @@protoc_insertion_point(copy_constructor:SearchRequest)
}

void SearchRequest::SharedCtor() {
  index_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trace_) -
      reinterpret_cast<char*>(&head_)) + sizeof(trace_));
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  index_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete head_;
}

void SearchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequest& SearchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_SearchRequest.base);
  return *internal_default_instance();
}


void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vec_fields_.Clear();
  fields_.Clear();
  range_filters_.Clear();
  term_filters_.Clear();
  sort_field_map_.Clear();
  sort_fields_.Clear();
  index_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&req_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trace_) -
      reinterpret_cast<char*>(&req_num_)) + sizeof(trace_));
  _internal_metadata_.Clear();
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 req_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topN = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_brute_search = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_brute_search_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .VectorQuery vec_fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vec_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fields = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fields(this->fields_size() - 1).data(),
            static_cast<int>(this->fields(this->fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchRequest.fields"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RangeFilter range_filters = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_range_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TermFilter term_filters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_term_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index_params = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_params().data(), static_cast<int>(this->index_params().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchRequest.index_params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 multi_vector_rank = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multi_vector_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool l2_sqrt = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &l2_sqrt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_vector_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vector_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> sort_field_map = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          SearchRequest_SortFieldMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SearchRequest_SortFieldMapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&sort_field_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchRequest.SortFieldMapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchRequest.SortFieldMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SortField sort_fields = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sort_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ranker = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ranker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ranker().data(), static_cast<int>(this->ranker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchRequest.ranker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool trace = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // int32 req_num = 2;
  if (this->req_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->req_num(), output);
  }

  // int32 topN = 3;
  if (this->topn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->topn(), output);
  }

  // int32 is_brute_search = 4;
  if (this->is_brute_search() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_brute_search(), output);
  }

  // repeated .VectorQuery vec_fields = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vec_fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->vec_fields(static_cast<int>(i)),
      output);
  }

  // repeated string fields = 6;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->fields(i), output);
  }

  // repeated .RangeFilter range_filters = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->range_filters(static_cast<int>(i)),
      output);
  }

  // repeated .TermFilter term_filters = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->term_filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->term_filters(static_cast<int>(i)),
      output);
  }

  // string index_params = 9;
  if (this->index_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_params().data(), static_cast<int>(this->index_params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.index_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->index_params(), output);
  }

  // int32 multi_vector_rank = 10;
  if (this->multi_vector_rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->multi_vector_rank(), output);
  }

  // bool l2_sqrt = 11;
  if (this->l2_sqrt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->l2_sqrt(), output);
  }

  // bool is_vector_value = 12;
  if (this->is_vector_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_vector_value(), output);
  }

  // map<string, string> sort_field_map = 13;
  if (!this->sort_field_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "SearchRequest.SortFieldMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "SearchRequest.SortFieldMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->sort_field_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sort_field_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SearchRequest_SortFieldMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SearchRequest_SortFieldMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .SortField sort_fields = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sort_fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->sort_fields(static_cast<int>(i)),
      output);
  }

  // string ranker = 15;
  if (this->ranker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ranker().data(), static_cast<int>(this->ranker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.ranker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->ranker(), output);
  }

  // bool trace = 16;
  if (this->trace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->trace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchRequest)
}

::google::protobuf::uint8* SearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // int32 req_num = 2;
  if (this->req_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->req_num(), target);
  }

  // int32 topN = 3;
  if (this->topn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->topn(), target);
  }

  // int32 is_brute_search = 4;
  if (this->is_brute_search() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_brute_search(), target);
  }

  // repeated .VectorQuery vec_fields = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vec_fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->vec_fields(static_cast<int>(i)), deterministic, target);
  }

  // repeated string fields = 6;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->fields(i), target);
  }

  // repeated .RangeFilter range_filters = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->range_filters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TermFilter term_filters = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->term_filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->term_filters(static_cast<int>(i)), deterministic, target);
  }

  // string index_params = 9;
  if (this->index_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_params().data(), static_cast<int>(this->index_params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.index_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->index_params(), target);
  }

  // int32 multi_vector_rank = 10;
  if (this->multi_vector_rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->multi_vector_rank(), target);
  }

  // bool l2_sqrt = 11;
  if (this->l2_sqrt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->l2_sqrt(), target);
  }

  // bool is_vector_value = 12;
  if (this->is_vector_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_vector_value(), target);
  }

  // map<string, string> sort_field_map = 13;
  if (!this->sort_field_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "SearchRequest.SortFieldMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "SearchRequest.SortFieldMapEntry.value");
      }
    };

    if (deterministic &&
        this->sort_field_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sort_field_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SearchRequest_SortFieldMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SearchRequest_SortFieldMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sort_field_map().begin();
          it != this->sort_field_map().end(); ++it) {
        entry.reset(sort_field_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .SortField sort_fields = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sort_fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->sort_fields(static_cast<int>(i)), deterministic, target);
  }

  // string ranker = 15;
  if (this->ranker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ranker().data(), static_cast<int>(this->ranker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.ranker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->ranker(), target);
  }

  // bool trace = 16;
  if (this->trace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->trace(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .VectorQuery vec_fields = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vec_fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vec_fields(static_cast<int>(i)));
    }
  }

  // repeated string fields = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fields_size());
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fields(i));
  }

  // repeated .RangeFilter range_filters = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->range_filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->range_filters(static_cast<int>(i)));
    }
  }

  // repeated .TermFilter term_filters = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->term_filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->term_filters(static_cast<int>(i)));
    }
  }

  // map<string, string> sort_field_map = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sort_field_map_size());
  {
    ::std::unique_ptr<SearchRequest_SortFieldMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->sort_field_map().begin();
        it != this->sort_field_map().end(); ++it) {
      entry.reset(sort_field_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .SortField sort_fields = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->sort_fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sort_fields(static_cast<int>(i)));
    }
  }

  // string index_params = 9;
  if (this->index_params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_params());
  }

  // string ranker = 15;
  if (this->ranker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ranker());
  }

  // .RequestHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // int32 req_num = 2;
  if (this->req_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->req_num());
  }

  // int32 topN = 3;
  if (this->topn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topn());
  }

  // int32 is_brute_search = 4;
  if (this->is_brute_search() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_brute_search());
  }

  // int32 multi_vector_rank = 10;
  if (this->multi_vector_rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->multi_vector_rank());
  }

  // bool l2_sqrt = 11;
  if (this->l2_sqrt() != 0) {
    total_size += 1 + 1;
  }

  // bool is_vector_value = 12;
  if (this->is_vector_value() != 0) {
    total_size += 1 + 1;
  }

  // bool trace = 16;
  if (this->trace() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vec_fields_.MergeFrom(from.vec_fields_);
  fields_.MergeFrom(from.fields_);
  range_filters_.MergeFrom(from.range_filters_);
  term_filters_.MergeFrom(from.term_filters_);
  sort_field_map_.MergeFrom(from.sort_field_map_);
  sort_fields_.MergeFrom(from.sort_fields_);
  if (from.index_params().size() > 0) {

    index_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_params_);
  }
  if (from.ranker().size() > 0) {

    ranker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ranker_);
  }
  if (from.has_head()) {
    mutable_head()->::RequestHead::MergeFrom(from.head());
  }
  if (from.req_num() != 0) {
    set_req_num(from.req_num());
  }
  if (from.topn() != 0) {
    set_topn(from.topn());
  }
  if (from.is_brute_search() != 0) {
    set_is_brute_search(from.is_brute_search());
  }
  if (from.multi_vector_rank() != 0) {
    set_multi_vector_rank(from.multi_vector_rank());
  }
  if (from.l2_sqrt() != 0) {
    set_l2_sqrt(from.l2_sqrt());
  }
  if (from.is_vector_value() != 0) {
    set_is_vector_value(from.is_vector_value());
  }
  if (from.trace() != 0) {
    set_trace(from.trace());
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  CastToBase(&vec_fields_)->InternalSwap(CastToBase(&other->vec_fields_));
  fields_.InternalSwap(CastToBase(&other->fields_));
  CastToBase(&range_filters_)->InternalSwap(CastToBase(&other->range_filters_));
  CastToBase(&term_filters_)->InternalSwap(CastToBase(&other->term_filters_));
  sort_field_map_.Swap(&other->sort_field_map_);
  CastToBase(&sort_fields_)->InternalSwap(CastToBase(&other->sort_fields_));
  index_params_.Swap(&other->index_params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ranker_.Swap(&other->ranker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(head_, other->head_);
  swap(req_num_, other->req_num_);
  swap(topn_, other->topn_);
  swap(is_brute_search_, other->is_brute_search_);
  swap(multi_vector_rank_, other->multi_vector_rank_);
  swap(l2_sqrt_, other->l2_sqrt_);
  swap(is_vector_value_, other->is_vector_value_);
  swap(trace_, other->trace_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResultItem::InitAsDefaultInstance() {
}
void ResultItem::clear_fields() {
  fields_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultItem::kScoreFieldNumber;
const int ResultItem::kFieldsFieldNumber;
const int ResultItem::kPKeyFieldNumber;
const int ResultItem::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultItem::ResultItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_ResultItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultItem)
}
ResultItem::ResultItem(const ResultItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.p_key().size() > 0) {
    p_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_key_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:ResultItem)
}

void ResultItem::SharedCtor() {
  p_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
}

ResultItem::~ResultItem() {
  // @@protoc_insertion_point(destructor:ResultItem)
  SharedDtor();
}

void ResultItem::SharedDtor() {
  p_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResultItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResultItem::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResultItem& ResultItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_ResultItem.base);
  return *internal_default_instance();
}


void ResultItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  p_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
  _internal_metadata_.Clear();
}

bool ResultItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Field fields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string p_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_p_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->p_key().data(), static_cast<int>(this->p_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResultItem.p_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultItem)
  return false;
#undef DO_
}

void ResultItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double score = 1;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->score(), output);
  }

  // repeated .Field fields = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->fields(static_cast<int>(i)),
      output);
  }

  // string p_key = 3;
  if (this->p_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p_key().data(), static_cast<int>(this->p_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResultItem.p_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->p_key(), output);
  }

  // bytes source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResultItem)
}

::google::protobuf::uint8* ResultItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResultItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double score = 1;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->score(), target);
  }

  // repeated .Field fields = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // string p_key = 3;
  if (this->p_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p_key().data(), static_cast<int>(this->p_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResultItem.p_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->p_key(), target);
  }

  // bytes source = 4;
  if (this->source().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->source(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultItem)
  return target;
}

size_t ResultItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResultItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Field fields = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // string p_key = 3;
  if (this->p_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->p_key());
  }

  // bytes source = 4;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source());
  }

  // double score = 1;
  if (this->score() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultItem)
    MergeFrom(*source);
  }
}

void ResultItem::MergeFrom(const ResultItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.p_key().size() > 0) {

    p_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_key_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void ResultItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultItem::CopyFrom(const ResultItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultItem::IsInitialized() const {
  return true;
}

void ResultItem::Swap(ResultItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultItem::InternalSwap(ResultItem* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  p_key_.Swap(&other->p_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResultItem::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResult::InitAsDefaultInstance() {
  ::_SearchResult_default_instance_._instance.get_mutable()->status_ = const_cast< ::SearchStatus*>(
      ::SearchStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResult::kTotalHitsFieldNumber;
const int SearchResult::kMaxScoreFieldNumber;
const int SearchResult::kMaxTookFieldNumber;
const int SearchResult::kMaxTookIdFieldNumber;
const int SearchResult::kStatusFieldNumber;
const int SearchResult::kMsgFieldNumber;
const int SearchResult::kResultItemsFieldNumber;
const int SearchResult::kPIDFieldNumber;
const int SearchResult::kTimeoutFieldNumber;
const int SearchResult::kTopNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResult::SearchResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchResult)
}
SearchResult::SearchResult(const SearchResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      result_items_(from.result_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_status()) {
    status_ = new ::SearchStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  ::memcpy(&max_score_, &from.max_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&topn_) -
    reinterpret_cast<char*>(&max_score_)) + sizeof(topn_));
  // @@protoc_insertion_point(copy_constructor:SearchResult)
}

void SearchResult::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topn_) -
      reinterpret_cast<char*>(&status_)) + sizeof(topn_));
}

SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:SearchResult)
  SharedDtor();
}

void SearchResult::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void SearchResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchResult::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResult& SearchResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_SearchResult.base);
  return *internal_default_instance();
}


void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_items_.Clear();
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  ::memset(&max_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topn_) -
      reinterpret_cast<char*>(&max_score_)) + sizeof(topn_));
  _internal_metadata_.Clear();
}

bool SearchResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 total_hits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max_score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_took = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_took_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_took_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_took_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SearchStatus status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchResult.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ResultItem result_items = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_result_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topN = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchResult)
  return false;
#undef DO_
}

void SearchResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_hits = 1;
  if (this->total_hits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total_hits(), output);
  }

  // double max_score = 2;
  if (this->max_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->max_score(), output);
  }

  // int64 max_took = 3;
  if (this->max_took() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_took(), output);
  }

  // uint32 max_took_id = 4;
  if (this->max_took_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->max_took_id(), output);
  }

  // .SearchStatus status = 5;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_status(), output);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchResult.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  // repeated .ResultItem result_items = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->result_items(static_cast<int>(i)),
      output);
  }

  // uint32 pID = 8;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pid(), output);
  }

  // bool timeout = 9;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->timeout(), output);
  }

  // int32 topN = 10;
  if (this->topn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->topn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchResult)
}

::google::protobuf::uint8* SearchResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_hits = 1;
  if (this->total_hits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total_hits(), target);
  }

  // double max_score = 2;
  if (this->max_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->max_score(), target);
  }

  // int64 max_took = 3;
  if (this->max_took() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_took(), target);
  }

  // uint32 max_took_id = 4;
  if (this->max_took_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->max_took_id(), target);
  }

  // .SearchStatus status = 5;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_status(), deterministic, target);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchResult.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  // repeated .ResultItem result_items = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->result_items(static_cast<int>(i)), deterministic, target);
  }

  // uint32 pID = 8;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pid(), target);
  }

  // bool timeout = 9;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->timeout(), target);
  }

  // int32 topN = 10;
  if (this->topn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->topn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchResult)
  return target;
}

size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ResultItem result_items = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->result_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->result_items(static_cast<int>(i)));
    }
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .SearchStatus status = 5;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // double max_score = 2;
  if (this->max_score() != 0) {
    total_size += 1 + 8;
  }

  // int32 total_hits = 1;
  if (this->total_hits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_hits());
  }

  // uint32 max_took_id = 4;
  if (this->max_took_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_took_id());
  }

  // int64 max_took = 3;
  if (this->max_took() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_took());
  }

  // uint32 pID = 8;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  // bool timeout = 9;
  if (this->timeout() != 0) {
    total_size += 1 + 1;
  }

  // int32 topN = 10;
  if (this->topn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchResult)
    MergeFrom(*source);
  }
}

void SearchResult::MergeFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_items_.MergeFrom(from.result_items_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_status()) {
    mutable_status()->::SearchStatus::MergeFrom(from.status());
  }
  if (from.max_score() != 0) {
    set_max_score(from.max_score());
  }
  if (from.total_hits() != 0) {
    set_total_hits(from.total_hits());
  }
  if (from.max_took_id() != 0) {
    set_max_took_id(from.max_took_id());
  }
  if (from.max_took() != 0) {
    set_max_took(from.max_took());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.topn() != 0) {
    set_topn(from.topn());
  }
}

void SearchResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResult::IsInitialized() const {
  return true;
}

void SearchResult::Swap(SearchResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResult::InternalSwap(SearchResult* other) {
  using std::swap;
  CastToBase(&result_items_)->InternalSwap(CastToBase(&other->result_items_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(max_score_, other->max_score_);
  swap(total_hits_, other->total_hits_);
  swap(max_took_id_, other->max_took_id_);
  swap(max_took_, other->max_took_);
  swap(pid_, other->pid_);
  swap(timeout_, other->timeout_);
  swap(topn_, other->topn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchResult::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResponse::InitAsDefaultInstance() {
  ::_SearchResponse_default_instance_._instance.get_mutable()->head_ = const_cast< ::ResponseHead*>(
      ::ResponseHead::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse::kHeadFieldNumber;
const int SearchResponse::kResultsFieldNumber;
const int SearchResponse::kTimeoutFieldNumber;
const int SearchResponse::kFlatBytesFieldNumber;
const int SearchResponse::kTopSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse::SearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchResponse)
}
SearchResponse::SearchResponse(const SearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flatbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flatbytes().size() > 0) {
    flatbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flatbytes_);
  }
  if (from.has_head()) {
    head_ = new ::ResponseHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&top_size_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(top_size_));
  // @@protoc_insertion_point(copy_constructor:SearchResponse)
}

void SearchResponse::SharedCtor() {
  flatbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_size_) -
      reinterpret_cast<char*>(&head_)) + sizeof(top_size_));
}

SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:SearchResponse)
  SharedDtor();
}

void SearchResponse::SharedDtor() {
  flatbytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete head_;
}

void SearchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchResponse::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse& SearchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_SearchResponse.base);
  return *internal_default_instance();
}


void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  flatbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_size_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(top_size_));
  _internal_metadata_.Clear();
}

bool SearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SearchResult results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes FlatBytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_flatbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 top_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchResponse)
  return false;
#undef DO_
}

void SearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // repeated .SearchResult results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->results(static_cast<int>(i)),
      output);
  }

  // bool timeout = 3;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->timeout(), output);
  }

  // bytes FlatBytes = 4;
  if (this->flatbytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->flatbytes(), output);
  }

  // int32 top_size = 5;
  if (this->top_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->top_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchResponse)
}

::google::protobuf::uint8* SearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // repeated .SearchResult results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  // bool timeout = 3;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->timeout(), target);
  }

  // bytes FlatBytes = 4;
  if (this->flatbytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->flatbytes(), target);
  }

  // int32 top_size = 5;
  if (this->top_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->top_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchResponse)
  return target;
}

size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SearchResult results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // bytes FlatBytes = 4;
  if (this->flatbytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->flatbytes());
  }

  // .ResponseHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // bool timeout = 3;
  if (this->timeout() != 0) {
    total_size += 1 + 1;
  }

  // int32 top_size = 5;
  if (this->top_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->top_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchResponse)
    MergeFrom(*source);
  }
}

void SearchResponse::MergeFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.flatbytes().size() > 0) {

    flatbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flatbytes_);
  }
  if (from.has_head()) {
    mutable_head()->::ResponseHead::MergeFrom(from.head());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.top_size() != 0) {
    set_top_size(from.top_size());
  }
}

void SearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::Swap(SearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse::InternalSwap(SearchResponse* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  flatbytes_.Swap(&other->flatbytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(head_, other->head_);
  swap(timeout_, other->timeout_);
  swap(top_size_, other->top_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchStatus::kTotalFieldNumber;
const int SearchStatus::kFailedFieldNumber;
const int SearchStatus::kSuccessfulFieldNumber;
const int SearchStatus::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchStatus::SearchStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_router_5fgrpc_2eproto::scc_info_SearchStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchStatus)
}
SearchStatus::SearchStatus(const SearchStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&successful_) -
    reinterpret_cast<char*>(&total_)) + sizeof(successful_));
  // @@protoc_insertion_point(copy_constructor:SearchStatus)
}

void SearchStatus::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&successful_) -
      reinterpret_cast<char*>(&total_)) + sizeof(successful_));
}

SearchStatus::~SearchStatus() {
  // @@protoc_insertion_point(destructor:SearchStatus)
  SharedDtor();
}

void SearchStatus::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchStatus::descriptor() {
  ::protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchStatus& SearchStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_router_5fgrpc_2eproto::scc_info_SearchStatus.base);
  return *internal_default_instance();
}


void SearchStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&successful_) -
      reinterpret_cast<char*>(&total_)) + sizeof(successful_));
  _internal_metadata_.Clear();
}

bool SearchStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 failed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 successful = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &successful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchStatus.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchStatus)
  return false;
#undef DO_
}

void SearchStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total(), output);
  }

  // int32 failed = 2;
  if (this->failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->failed(), output);
  }

  // int32 successful = 3;
  if (this->successful() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->successful(), output);
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchStatus.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchStatus)
}

::google::protobuf::uint8* SearchStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total(), target);
  }

  // int32 failed = 2;
  if (this->failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->failed(), target);
  }

  // int32 successful = 3;
  if (this->successful() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->successful(), target);
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchStatus.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchStatus)
  return target;
}

size_t SearchStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 total = 1;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total());
  }

  // int32 failed = 2;
  if (this->failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->failed());
  }

  // int32 successful = 3;
  if (this->successful() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->successful());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchStatus)
    MergeFrom(*source);
  }
}

void SearchStatus::MergeFrom(const SearchStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.failed() != 0) {
    set_failed(from.failed());
  }
  if (from.successful() != 0) {
    set_successful(from.successful());
  }
}

void SearchStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchStatus::CopyFrom(const SearchStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchStatus::IsInitialized() const {
  return true;
}

void SearchStatus::Swap(SearchStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchStatus::InternalSwap(SearchStatus* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_, other->total_);
  swap(failed_, other->failed_);
  swap(successful_, other->successful_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchStatus::GetMetadata() const {
  protobuf_router_5fgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_router_5fgrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RequestHead_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::RequestHead_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::RequestHead_ParamsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RequestHead* Arena::CreateMaybeMessage< ::RequestHead >(Arena* arena) {
  return Arena::CreateInternal< ::RequestHead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ResponseHead_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ResponseHead_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ResponseHead_ParamsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ResponseHead* Arena::CreateMaybeMessage< ::ResponseHead >(Arena* arena) {
  return Arena::CreateInternal< ::ResponseHead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GetRequest* Arena::CreateMaybeMessage< ::GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::GetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DeleteRequest* Arena::CreateMaybeMessage< ::DeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DeleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BulkRequest* Arena::CreateMaybeMessage< ::BulkRequest >(Arena* arena) {
  return Arena::CreateInternal< ::BulkRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ForceMergeRequest* Arena::CreateMaybeMessage< ::ForceMergeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ForceMergeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FlushRequest* Arena::CreateMaybeMessage< ::FlushRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FlushRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IndexRequest* Arena::CreateMaybeMessage< ::IndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::IndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GetResponse* Arena::CreateMaybeMessage< ::GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DeleteResponse* Arena::CreateMaybeMessage< ::DeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DeleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BulkResponse* Arena::CreateMaybeMessage< ::BulkResponse >(Arena* arena) {
  return Arena::CreateInternal< ::BulkResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ForceMergeResponse* Arena::CreateMaybeMessage< ::ForceMergeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ForceMergeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DelByQueryeResponse* Arena::CreateMaybeMessage< ::DelByQueryeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DelByQueryeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FlushResponse* Arena::CreateMaybeMessage< ::FlushResponse >(Arena* arena) {
  return Arena::CreateInternal< ::FlushResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IndexResponse* Arena::CreateMaybeMessage< ::IndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::IndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TermFilter* Arena::CreateMaybeMessage< ::TermFilter >(Arena* arena) {
  return Arena::CreateInternal< ::TermFilter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RangeFilter* Arena::CreateMaybeMessage< ::RangeFilter >(Arena* arena) {
  return Arena::CreateInternal< ::RangeFilter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SortField* Arena::CreateMaybeMessage< ::SortField >(Arena* arena) {
  return Arena::CreateInternal< ::SortField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VectorQuery* Arena::CreateMaybeMessage< ::VectorQuery >(Arena* arena) {
  return Arena::CreateInternal< ::VectorQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IndexParameters* Arena::CreateMaybeMessage< ::IndexParameters >(Arena* arena) {
  return Arena::CreateInternal< ::IndexParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QueryRequest_SortFieldMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::QueryRequest_SortFieldMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::QueryRequest_SortFieldMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QueryRequest* Arena::CreateMaybeMessage< ::QueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::QueryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SearchRequest_SortFieldMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::SearchRequest_SortFieldMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::SearchRequest_SortFieldMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SearchRequest* Arena::CreateMaybeMessage< ::SearchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SearchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ResultItem* Arena::CreateMaybeMessage< ::ResultItem >(Arena* arena) {
  return Arena::CreateInternal< ::ResultItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SearchResult* Arena::CreateMaybeMessage< ::SearchResult >(Arena* arena) {
  return Arena::CreateInternal< ::SearchResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SearchResponse* Arena::CreateMaybeMessage< ::SearchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SearchResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SearchStatus* Arena::CreateMaybeMessage< ::SearchStatus >(Arena* arena) {
  return Arena::CreateInternal< ::SearchStatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
