// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_model.proto

#include "data_model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_data_5fmodel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DB_UserPasswordPairEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Field;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VectorMetaInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Document;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FieldMetaInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Table;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_data_5fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TableMetaInfo;
}  // namespace protobuf_data_5fmodel_2eproto
namespace protobuf_errors_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_errors_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_errors_2eproto
class FieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Field>
      _instance;
} _Field_default_instance_;
class DocumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Document>
      _instance;
} _Document_default_instance_;
class ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Item>
      _instance;
} _Item_default_instance_;
class VectorMetaInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VectorMetaInfo>
      _instance;
} _VectorMetaInfo_default_instance_;
class FieldMetaInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMetaInfo>
      _instance;
} _FieldMetaInfo_default_instance_;
class TableMetaInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableMetaInfo>
      _instance;
} _TableMetaInfo_default_instance_;
class TableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Table>
      _instance;
} _Table_default_instance_;
class DB_UserPasswordPairEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DB_UserPasswordPairEntry_DoNotUse>
      _instance;
} _DB_UserPasswordPairEntry_DoNotUse_default_instance_;
class DBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DB>
      _instance;
} _DB_default_instance_;
namespace protobuf_data_5fmodel_2eproto {
static void InitDefaultsField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Field_default_instance_;
    new (ptr) ::Field();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Field::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Field =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsField}, {}};

static void InitDefaultsDocument() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Document_default_instance_;
    new (ptr) ::Document();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Document::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Document =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDocument}, {
      &protobuf_data_5fmodel_2eproto::scc_info_Field.base,}};

static void InitDefaultsItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Item_default_instance_;
    new (ptr) ::Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Item =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsItem}, {
      &protobuf_errors_2eproto::scc_info_Error.base,
      &protobuf_data_5fmodel_2eproto::scc_info_Document.base,}};

static void InitDefaultsVectorMetaInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VectorMetaInfo_default_instance_;
    new (ptr) ::VectorMetaInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VectorMetaInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VectorMetaInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVectorMetaInfo}, {}};

static void InitDefaultsFieldMetaInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FieldMetaInfo_default_instance_;
    new (ptr) ::FieldMetaInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FieldMetaInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FieldMetaInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFieldMetaInfo}, {
      &protobuf_data_5fmodel_2eproto::scc_info_VectorMetaInfo.base,}};

static void InitDefaultsTableMetaInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TableMetaInfo_default_instance_;
    new (ptr) ::TableMetaInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TableMetaInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TableMetaInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTableMetaInfo}, {
      &protobuf_data_5fmodel_2eproto::scc_info_FieldMetaInfo.base,}};

static void InitDefaultsTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Table_default_instance_;
    new (ptr) ::Table();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Table::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Table =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTable}, {
      &protobuf_data_5fmodel_2eproto::scc_info_TableMetaInfo.base,}};

static void InitDefaultsDB_UserPasswordPairEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DB_UserPasswordPairEntry_DoNotUse_default_instance_;
    new (ptr) ::DB_UserPasswordPairEntry_DoNotUse();
  }
  ::DB_UserPasswordPairEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DB_UserPasswordPairEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDB_UserPasswordPairEntry_DoNotUse}, {}};

static void InitDefaultsDB() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DB_default_instance_;
    new (ptr) ::DB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DB::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DB =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDB}, {
      &protobuf_data_5fmodel_2eproto::scc_info_Table.base,
      &protobuf_data_5fmodel_2eproto::scc_info_DB_UserPasswordPairEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Field.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Document.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Item.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VectorMetaInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMetaInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableMetaInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Table.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DB_UserPasswordPairEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DB.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Field, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Field, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Field, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Field, option_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Document, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Document, p_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Document, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, doc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorMetaInfo, dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorMetaInfo, value_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorMetaInfo, store_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VectorMetaInfo, store_param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FieldMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FieldMetaInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FieldMetaInfo, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FieldMetaInfo, is_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FieldMetaInfo, vector_meta_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TableMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TableMetaInfo, primary_key_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TableMetaInfo, primary_key_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TableMetaInfo, partitions_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TableMetaInfo, replicas_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TableMetaInfo, field_meta_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Table, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Table, table_meta_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB_UserPasswordPairEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB_UserPasswordPairEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB_UserPasswordPairEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB_UserPasswordPairEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB, tables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DB, user_password_pair_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Field)},
  { 9, -1, sizeof(::Document)},
  { 16, -1, sizeof(::Item)},
  { 24, -1, sizeof(::VectorMetaInfo)},
  { 33, -1, sizeof(::FieldMetaInfo)},
  { 42, -1, sizeof(::TableMetaInfo)},
  { 52, -1, sizeof(::Table)},
  { 59, 66, sizeof(::DB_UserPasswordPairEntry_DoNotUse)},
  { 68, -1, sizeof(::DB)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Document_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VectorMetaInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FieldMetaInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TableMetaInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Table_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DB_UserPasswordPairEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DB_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "data_model.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020data_model.proto\032\014errors.proto\"\\\n\005Fiel"
      "d\022\014\n\004name\030\001 \001(\t\022\030\n\004type\030\002 \001(\0162\n.FieldTyp"
      "e\022\r\n\005value\030\003 \001(\014\022\034\n\006option\030\004 \001(\0162\014.Field"
      "Option\"1\n\010Document\022\r\n\005p_key\030\001 \001(\t\022\026\n\006fie"
      "lds\030\002 \003(\0132\006.Field\"@\n\004Item\022\023\n\003err\030\001 \001(\0132\006"
      ".Error\022\026\n\003doc\030\002 \001(\0132\t.Document\022\013\n\003msg\030\003 "
      "\001(\t\"\343\001\n\016VectorMetaInfo\022\021\n\tdimension\030\001 \001("
      "\005\022-\n\nvalue_type\030\002 \001(\0162\031.VectorMetaInfo.V"
      "alueType\022-\n\nstore_type\030\003 \001(\0162\031.VectorMet"
      "aInfo.StoreType\022\023\n\013store_param\030\004 \001(\t\"!\n\t"
      "ValueType\022\t\n\005FLOAT\020\000\022\t\n\005UINT8\020\001\"(\n\tStore"
      "Type\022\016\n\nMEMORYONLY\020\000\022\013\n\007ROCKSDB\020\001\"y\n\rFie"
      "ldMetaInfo\022\014\n\004name\030\001 \001(\t\022\035\n\tdata_type\030\002 "
      "\001(\0162\n.FieldType\022\020\n\010is_index\030\003 \001(\010\022)\n\020vec"
      "tor_meta_info\030\004 \001(\0132\017.VectorMetaInfo\"\246\001\n"
      "\rTableMetaInfo\022\030\n\020primary_key_name\030\001 \001(\t"
      "\022$\n\020primary_key_type\030\002 \001(\0162\n.FieldType\022\026"
      "\n\016partitions_num\030\003 \001(\005\022\024\n\014replicas_num\030\004"
      " \001(\005\022\'\n\017field_meta_info\030\005 \003(\0132\016.FieldMet"
      "aInfo\">\n\005Table\022\014\n\004name\030\001 \001(\t\022\'\n\017table_me"
      "ta_info\030\002 \001(\0132\016.TableMetaInfo\"\232\001\n\002DB\022\014\n\004"
      "name\030\001 \001(\t\022\026\n\006tables\030\002 \003(\0132\006.Table\0225\n\022us"
      "er_password_pair\030\003 \003(\0132\031.DB.UserPassword"
      "PairEntry\0327\n\025UserPasswordPairEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*r\n\tFieldType\022"
      "\007\n\003INT\020\000\022\010\n\004LONG\020\001\022\t\n\005FLOAT\020\002\022\n\n\006DOUBLE\020"
      "\003\022\n\n\006STRING\020\004\022\n\n\006VECTOR\020\005\022\010\n\004BOOL\020\006\022\010\n\004D"
      "ATE\020\007\022\017\n\013STRINGARRAY\020\010*\"\n\013FieldOption\022\010\n"
      "\004Null\020\000\022\t\n\005Index\020\001B\016H\001Z\n./vearchpbb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1162);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data_model.proto", &protobuf_RegisterTypes);
  ::protobuf_errors_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_data_5fmodel_2eproto
const ::google::protobuf::EnumDescriptor* VectorMetaInfo_ValueType_descriptor() {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_5fmodel_2eproto::file_level_enum_descriptors[0];
}
bool VectorMetaInfo_ValueType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VectorMetaInfo_ValueType VectorMetaInfo::FLOAT;
const VectorMetaInfo_ValueType VectorMetaInfo::UINT8;
const VectorMetaInfo_ValueType VectorMetaInfo::ValueType_MIN;
const VectorMetaInfo_ValueType VectorMetaInfo::ValueType_MAX;
const int VectorMetaInfo::ValueType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* VectorMetaInfo_StoreType_descriptor() {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_5fmodel_2eproto::file_level_enum_descriptors[1];
}
bool VectorMetaInfo_StoreType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VectorMetaInfo_StoreType VectorMetaInfo::MEMORYONLY;
const VectorMetaInfo_StoreType VectorMetaInfo::ROCKSDB;
const VectorMetaInfo_StoreType VectorMetaInfo::StoreType_MIN;
const VectorMetaInfo_StoreType VectorMetaInfo::StoreType_MAX;
const int VectorMetaInfo::StoreType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FieldType_descriptor() {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_5fmodel_2eproto::file_level_enum_descriptors[2];
}
bool FieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FieldOption_descriptor() {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_5fmodel_2eproto::file_level_enum_descriptors[3];
}
bool FieldOption_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Field::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Field::kNameFieldNumber;
const int Field::kTypeFieldNumber;
const int Field::kValueFieldNumber;
const int Field::kOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Field::Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_Field.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Field)
}
Field::Field(const Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&option_) -
    reinterpret_cast<char*>(&type_)) + sizeof(option_));
  // @@protoc_insertion_point(copy_constructor:Field)
}

void Field::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_) -
      reinterpret_cast<char*>(&type_)) + sizeof(option_));
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:Field)
  SharedDtor();
}

void Field::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Field::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Field& Field::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_Field.base);
  return *internal_default_instance();
}


void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_) -
      reinterpret_cast<char*>(&type_)) + sizeof(option_));
  _internal_metadata_.Clear();
}

bool Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Field)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Field.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FieldType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::FieldType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FieldOption option = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_option(static_cast< ::FieldOption >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Field)
  return false;
#undef DO_
}

void Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Field.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .FieldType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // .FieldOption option = 4;
  if (this->option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->option(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Field)
}

::google::protobuf::uint8* Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Field.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .FieldType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // .FieldOption option = 4;
  if (this->option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->option(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Field)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .FieldType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .FieldOption option = 4;
  if (this->option() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->option());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Field)
  GOOGLE_DCHECK_NE(&from, this);
  const Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Field)
    MergeFrom(*source);
  }
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.option() != 0) {
    set_option(from.option());
  }
}

void Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::Swap(Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Field::InternalSwap(Field* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(option_, other->option_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Document::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Document::kPKeyFieldNumber;
const int Document::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Document::Document()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_Document.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Document)
}
Document::Document(const Document& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.p_key().size() > 0) {
    p_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_key_);
  }
  // @@protoc_insertion_point(copy_constructor:Document)
}

void Document::SharedCtor() {
  p_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Document::~Document() {
  // @@protoc_insertion_point(destructor:Document)
  SharedDtor();
}

void Document::SharedDtor() {
  p_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Document::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Document::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Document& Document::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_Document.base);
  return *internal_default_instance();
}


void Document::Clear() {
// @@protoc_insertion_point(message_clear_start:Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  p_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Document::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Document)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string p_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_p_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->p_key().data(), static_cast<int>(this->p_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Document.p_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Field fields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Document)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Document)
  return false;
#undef DO_
}

void Document::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string p_key = 1;
  if (this->p_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p_key().data(), static_cast<int>(this->p_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Document.p_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->p_key(), output);
  }

  // repeated .Field fields = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->fields(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Document)
}

::google::protobuf::uint8* Document::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string p_key = 1;
  if (this->p_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p_key().data(), static_cast<int>(this->p_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Document.p_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->p_key(), target);
  }

  // repeated .Field fields = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Document)
  return target;
}

size_t Document::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Document)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Field fields = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // string p_key = 1;
  if (this->p_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->p_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Document::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Document)
  GOOGLE_DCHECK_NE(&from, this);
  const Document* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Document>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Document)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Document)
    MergeFrom(*source);
  }
}

void Document::MergeFrom(const Document& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Document)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.p_key().size() > 0) {

    p_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_key_);
  }
}

void Document::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Document::CopyFrom(const Document& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Document::IsInitialized() const {
  return true;
}

void Document::Swap(Document* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Document::InternalSwap(Document* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  p_key_.Swap(&other->p_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Document::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Item::InitAsDefaultInstance() {
  ::_Item_default_instance_._instance.get_mutable()->err_ = const_cast< ::Error*>(
      ::Error::internal_default_instance());
  ::_Item_default_instance_._instance.get_mutable()->doc_ = const_cast< ::Document*>(
      ::Document::internal_default_instance());
}
void Item::clear_err() {
  if (GetArenaNoVirtual() == NULL && err_ != NULL) {
    delete err_;
  }
  err_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kErrFieldNumber;
const int Item::kDocFieldNumber;
const int Item::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_Item.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Item)
}
Item::Item(const Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_err()) {
    err_ = new ::Error(*from.err_);
  } else {
    err_ = NULL;
  }
  if (from.has_doc()) {
    doc_ = new ::Document(*from.doc_);
  } else {
    doc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Item)
}

void Item::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&doc_) -
      reinterpret_cast<char*>(&err_)) + sizeof(doc_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:Item)
  SharedDtor();
}

void Item::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete err_;
  if (this != internal_default_instance()) delete doc_;
}

void Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Item& Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_Item.base);
  return *internal_default_instance();
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && err_ != NULL) {
    delete err_;
  }
  err_ = NULL;
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) {
    delete doc_;
  }
  doc_ = NULL;
  _internal_metadata_.Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Error err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Document doc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_doc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Item.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error err = 1;
  if (this->has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_err(), output);
  }

  // .Document doc = 2;
  if (this->has_doc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_doc(), output);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Item.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error err = 1;
  if (this->has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_err(), deterministic, target);
  }

  // .Document doc = 2;
  if (this->has_doc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_doc(), deterministic, target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Item.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .Error err = 1;
  if (this->has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *err_);
  }

  // .Document doc = 2;
  if (this->has_doc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *doc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_err()) {
    mutable_err()->::Error::MergeFrom(from.err());
  }
  if (from.has_doc()) {
    mutable_doc()->::Document::MergeFrom(from.doc());
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(err_, other->err_);
  swap(doc_, other->doc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VectorMetaInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorMetaInfo::kDimensionFieldNumber;
const int VectorMetaInfo::kValueTypeFieldNumber;
const int VectorMetaInfo::kStoreTypeFieldNumber;
const int VectorMetaInfo::kStoreParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorMetaInfo::VectorMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_VectorMetaInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VectorMetaInfo)
}
VectorMetaInfo::VectorMetaInfo(const VectorMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  store_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.store_param().size() > 0) {
    store_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_param_);
  }
  ::memcpy(&dimension_, &from.dimension_,
    static_cast<size_t>(reinterpret_cast<char*>(&store_type_) -
    reinterpret_cast<char*>(&dimension_)) + sizeof(store_type_));
  // @@protoc_insertion_point(copy_constructor:VectorMetaInfo)
}

void VectorMetaInfo::SharedCtor() {
  store_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&store_type_) -
      reinterpret_cast<char*>(&dimension_)) + sizeof(store_type_));
}

VectorMetaInfo::~VectorMetaInfo() {
  // @@protoc_insertion_point(destructor:VectorMetaInfo)
  SharedDtor();
}

void VectorMetaInfo::SharedDtor() {
  store_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VectorMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VectorMetaInfo::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VectorMetaInfo& VectorMetaInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_VectorMetaInfo.base);
  return *internal_default_instance();
}


void VectorMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:VectorMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&store_type_) -
      reinterpret_cast<char*>(&dimension_)) + sizeof(store_type_));
  _internal_metadata_.Clear();
}

bool VectorMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VectorMetaInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dimension = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .VectorMetaInfo.ValueType value_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value_type(static_cast< ::VectorMetaInfo_ValueType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .VectorMetaInfo.StoreType store_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_store_type(static_cast< ::VectorMetaInfo_StoreType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string store_param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->store_param().data(), static_cast<int>(this->store_param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "VectorMetaInfo.store_param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VectorMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VectorMetaInfo)
  return false;
#undef DO_
}

void VectorMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VectorMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dimension = 1;
  if (this->dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dimension(), output);
  }

  // .VectorMetaInfo.ValueType value_type = 2;
  if (this->value_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value_type(), output);
  }

  // .VectorMetaInfo.StoreType store_type = 3;
  if (this->store_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->store_type(), output);
  }

  // string store_param = 4;
  if (this->store_param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->store_param().data(), static_cast<int>(this->store_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorMetaInfo.store_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->store_param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VectorMetaInfo)
}

::google::protobuf::uint8* VectorMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VectorMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dimension = 1;
  if (this->dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dimension(), target);
  }

  // .VectorMetaInfo.ValueType value_type = 2;
  if (this->value_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value_type(), target);
  }

  // .VectorMetaInfo.StoreType store_type = 3;
  if (this->store_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->store_type(), target);
  }

  // string store_param = 4;
  if (this->store_param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->store_param().data(), static_cast<int>(this->store_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VectorMetaInfo.store_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->store_param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VectorMetaInfo)
  return target;
}

size_t VectorMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VectorMetaInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string store_param = 4;
  if (this->store_param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->store_param());
  }

  // int32 dimension = 1;
  if (this->dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimension());
  }

  // .VectorMetaInfo.ValueType value_type = 2;
  if (this->value_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value_type());
  }

  // .VectorMetaInfo.StoreType store_type = 3;
  if (this->store_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->store_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VectorMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VectorMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VectorMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VectorMetaInfo)
    MergeFrom(*source);
  }
}

void VectorMetaInfo::MergeFrom(const VectorMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VectorMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.store_param().size() > 0) {

    store_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_param_);
  }
  if (from.dimension() != 0) {
    set_dimension(from.dimension());
  }
  if (from.value_type() != 0) {
    set_value_type(from.value_type());
  }
  if (from.store_type() != 0) {
    set_store_type(from.store_type());
  }
}

void VectorMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VectorMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorMetaInfo::CopyFrom(const VectorMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VectorMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorMetaInfo::IsInitialized() const {
  return true;
}

void VectorMetaInfo::Swap(VectorMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorMetaInfo::InternalSwap(VectorMetaInfo* other) {
  using std::swap;
  store_param_.Swap(&other->store_param_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dimension_, other->dimension_);
  swap(value_type_, other->value_type_);
  swap(store_type_, other->store_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VectorMetaInfo::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMetaInfo::InitAsDefaultInstance() {
  ::_FieldMetaInfo_default_instance_._instance.get_mutable()->vector_meta_info_ = const_cast< ::VectorMetaInfo*>(
      ::VectorMetaInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMetaInfo::kNameFieldNumber;
const int FieldMetaInfo::kDataTypeFieldNumber;
const int FieldMetaInfo::kIsIndexFieldNumber;
const int FieldMetaInfo::kVectorMetaInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMetaInfo::FieldMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_FieldMetaInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FieldMetaInfo)
}
FieldMetaInfo::FieldMetaInfo(const FieldMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_vector_meta_info()) {
    vector_meta_info_ = new ::VectorMetaInfo(*from.vector_meta_info_);
  } else {
    vector_meta_info_ = NULL;
  }
  ::memcpy(&data_type_, &from.data_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_index_) -
    reinterpret_cast<char*>(&data_type_)) + sizeof(is_index_));
  // @@protoc_insertion_point(copy_constructor:FieldMetaInfo)
}

void FieldMetaInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vector_meta_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_index_) -
      reinterpret_cast<char*>(&vector_meta_info_)) + sizeof(is_index_));
}

FieldMetaInfo::~FieldMetaInfo() {
  // @@protoc_insertion_point(destructor:FieldMetaInfo)
  SharedDtor();
}

void FieldMetaInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vector_meta_info_;
}

void FieldMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMetaInfo::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMetaInfo& FieldMetaInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_FieldMetaInfo.base);
  return *internal_default_instance();
}


void FieldMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:FieldMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && vector_meta_info_ != NULL) {
    delete vector_meta_info_;
  }
  vector_meta_info_ = NULL;
  ::memset(&data_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_index_) -
      reinterpret_cast<char*>(&data_type_)) + sizeof(is_index_));
  _internal_metadata_.Clear();
}

bool FieldMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FieldMetaInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FieldMetaInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FieldType data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_type(static_cast< ::FieldType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .VectorMetaInfo vector_meta_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vector_meta_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FieldMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FieldMetaInfo)
  return false;
#undef DO_
}

void FieldMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FieldMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FieldMetaInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .FieldType data_type = 2;
  if (this->data_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->data_type(), output);
  }

  // bool is_index = 3;
  if (this->is_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_index(), output);
  }

  // .VectorMetaInfo vector_meta_info = 4;
  if (this->has_vector_meta_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_vector_meta_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FieldMetaInfo)
}

::google::protobuf::uint8* FieldMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FieldMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FieldMetaInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .FieldType data_type = 2;
  if (this->data_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->data_type(), target);
  }

  // bool is_index = 3;
  if (this->is_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_index(), target);
  }

  // .VectorMetaInfo vector_meta_info = 4;
  if (this->has_vector_meta_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_vector_meta_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FieldMetaInfo)
  return target;
}

size_t FieldMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FieldMetaInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .VectorMetaInfo vector_meta_info = 4;
  if (this->has_vector_meta_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vector_meta_info_);
  }

  // .FieldType data_type = 2;
  if (this->data_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }

  // bool is_index = 3;
  if (this->is_index() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FieldMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FieldMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FieldMetaInfo)
    MergeFrom(*source);
  }
}

void FieldMetaInfo::MergeFrom(const FieldMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FieldMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_vector_meta_info()) {
    mutable_vector_meta_info()->::VectorMetaInfo::MergeFrom(from.vector_meta_info());
  }
  if (from.data_type() != 0) {
    set_data_type(from.data_type());
  }
  if (from.is_index() != 0) {
    set_is_index(from.is_index());
  }
}

void FieldMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FieldMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMetaInfo::CopyFrom(const FieldMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FieldMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMetaInfo::IsInitialized() const {
  return true;
}

void FieldMetaInfo::Swap(FieldMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldMetaInfo::InternalSwap(FieldMetaInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(vector_meta_info_, other->vector_meta_info_);
  swap(data_type_, other->data_type_);
  swap(is_index_, other->is_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMetaInfo::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableMetaInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableMetaInfo::kPrimaryKeyNameFieldNumber;
const int TableMetaInfo::kPrimaryKeyTypeFieldNumber;
const int TableMetaInfo::kPartitionsNumFieldNumber;
const int TableMetaInfo::kReplicasNumFieldNumber;
const int TableMetaInfo::kFieldMetaInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableMetaInfo::TableMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_TableMetaInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TableMetaInfo)
}
TableMetaInfo::TableMetaInfo(const TableMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_meta_info_(from.field_meta_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primary_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primary_key_name().size() > 0) {
    primary_key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_key_name_);
  }
  ::memcpy(&primary_key_type_, &from.primary_key_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&replicas_num_) -
    reinterpret_cast<char*>(&primary_key_type_)) + sizeof(replicas_num_));
  // @@protoc_insertion_point(copy_constructor:TableMetaInfo)
}

void TableMetaInfo::SharedCtor() {
  primary_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&primary_key_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicas_num_) -
      reinterpret_cast<char*>(&primary_key_type_)) + sizeof(replicas_num_));
}

TableMetaInfo::~TableMetaInfo() {
  // @@protoc_insertion_point(destructor:TableMetaInfo)
  SharedDtor();
}

void TableMetaInfo::SharedDtor() {
  primary_key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableMetaInfo::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableMetaInfo& TableMetaInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_TableMetaInfo.base);
  return *internal_default_instance();
}


void TableMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TableMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_meta_info_.Clear();
  primary_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&primary_key_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicas_num_) -
      reinterpret_cast<char*>(&primary_key_type_)) + sizeof(replicas_num_));
  _internal_metadata_.Clear();
}

bool TableMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TableMetaInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string primary_key_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primary_key_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primary_key_name().data(), static_cast<int>(this->primary_key_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TableMetaInfo.primary_key_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FieldType primary_key_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_primary_key_type(static_cast< ::FieldType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 partitions_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partitions_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replicas_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replicas_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FieldMetaInfo field_meta_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field_meta_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TableMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TableMetaInfo)
  return false;
#undef DO_
}

void TableMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TableMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string primary_key_name = 1;
  if (this->primary_key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_key_name().data(), static_cast<int>(this->primary_key_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TableMetaInfo.primary_key_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->primary_key_name(), output);
  }

  // .FieldType primary_key_type = 2;
  if (this->primary_key_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->primary_key_type(), output);
  }

  // int32 partitions_num = 3;
  if (this->partitions_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partitions_num(), output);
  }

  // int32 replicas_num = 4;
  if (this->replicas_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->replicas_num(), output);
  }

  // repeated .FieldMetaInfo field_meta_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_meta_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->field_meta_info(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TableMetaInfo)
}

::google::protobuf::uint8* TableMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TableMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string primary_key_name = 1;
  if (this->primary_key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_key_name().data(), static_cast<int>(this->primary_key_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TableMetaInfo.primary_key_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->primary_key_name(), target);
  }

  // .FieldType primary_key_type = 2;
  if (this->primary_key_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->primary_key_type(), target);
  }

  // int32 partitions_num = 3;
  if (this->partitions_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partitions_num(), target);
  }

  // int32 replicas_num = 4;
  if (this->replicas_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->replicas_num(), target);
  }

  // repeated .FieldMetaInfo field_meta_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_meta_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->field_meta_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TableMetaInfo)
  return target;
}

size_t TableMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TableMetaInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .FieldMetaInfo field_meta_info = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->field_meta_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field_meta_info(static_cast<int>(i)));
    }
  }

  // string primary_key_name = 1;
  if (this->primary_key_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->primary_key_name());
  }

  // .FieldType primary_key_type = 2;
  if (this->primary_key_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->primary_key_type());
  }

  // int32 partitions_num = 3;
  if (this->partitions_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partitions_num());
  }

  // int32 replicas_num = 4;
  if (this->replicas_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replicas_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TableMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TableMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TableMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TableMetaInfo)
    MergeFrom(*source);
  }
}

void TableMetaInfo::MergeFrom(const TableMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TableMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_meta_info_.MergeFrom(from.field_meta_info_);
  if (from.primary_key_name().size() > 0) {

    primary_key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_key_name_);
  }
  if (from.primary_key_type() != 0) {
    set_primary_key_type(from.primary_key_type());
  }
  if (from.partitions_num() != 0) {
    set_partitions_num(from.partitions_num());
  }
  if (from.replicas_num() != 0) {
    set_replicas_num(from.replicas_num());
  }
}

void TableMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TableMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableMetaInfo::CopyFrom(const TableMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TableMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableMetaInfo::IsInitialized() const {
  return true;
}

void TableMetaInfo::Swap(TableMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableMetaInfo::InternalSwap(TableMetaInfo* other) {
  using std::swap;
  CastToBase(&field_meta_info_)->InternalSwap(CastToBase(&other->field_meta_info_));
  primary_key_name_.Swap(&other->primary_key_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(primary_key_type_, other->primary_key_type_);
  swap(partitions_num_, other->partitions_num_);
  swap(replicas_num_, other->replicas_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableMetaInfo::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Table::InitAsDefaultInstance() {
  ::_Table_default_instance_._instance.get_mutable()->table_meta_info_ = const_cast< ::TableMetaInfo*>(
      ::TableMetaInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Table::kNameFieldNumber;
const int Table::kTableMetaInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Table::Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_Table.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Table)
}
Table::Table(const Table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_table_meta_info()) {
    table_meta_info_ = new ::TableMetaInfo(*from.table_meta_info_);
  } else {
    table_meta_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Table)
}

void Table::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_meta_info_ = NULL;
}

Table::~Table() {
  // @@protoc_insertion_point(destructor:Table)
  SharedDtor();
}

void Table::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_meta_info_;
}

void Table::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Table::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Table& Table::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_Table.base);
  return *internal_default_instance();
}


void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && table_meta_info_ != NULL) {
    delete table_meta_info_;
  }
  table_meta_info_ = NULL;
  _internal_metadata_.Clear();
}

bool Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Table)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Table.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TableMetaInfo table_meta_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_meta_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Table)
  return false;
#undef DO_
}

void Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Table.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .TableMetaInfo table_meta_info = 2;
  if (this->has_table_meta_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_table_meta_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Table)
}

::google::protobuf::uint8* Table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Table.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .TableMetaInfo table_meta_info = 2;
  if (this->has_table_meta_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_table_meta_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Table)
  return target;
}

size_t Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Table)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .TableMetaInfo table_meta_info = 2;
  if (this->has_table_meta_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_meta_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Table)
  GOOGLE_DCHECK_NE(&from, this);
  const Table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Table)
    MergeFrom(*source);
  }
}

void Table::MergeFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_table_meta_info()) {
    mutable_table_meta_info()->::TableMetaInfo::MergeFrom(from.table_meta_info());
  }
}

void Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Table::IsInitialized() const {
  return true;
}

void Table::Swap(Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Table::InternalSwap(Table* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_meta_info_, other->table_meta_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Table::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DB_UserPasswordPairEntry_DoNotUse::DB_UserPasswordPairEntry_DoNotUse() {}
DB_UserPasswordPairEntry_DoNotUse::DB_UserPasswordPairEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DB_UserPasswordPairEntry_DoNotUse::MergeFrom(const DB_UserPasswordPairEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DB_UserPasswordPairEntry_DoNotUse::GetMetadata() const {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[7];
}
void DB_UserPasswordPairEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DB::kNameFieldNumber;
const int DB::kTablesFieldNumber;
const int DB::kUserPasswordPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DB::DB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_5fmodel_2eproto::scc_info_DB.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DB)
}
DB::DB(const DB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_password_pair_.MergeFrom(from.user_password_pair_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:DB)
}

void DB::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DB::~DB() {
  // @@protoc_insertion_point(destructor:DB)
  SharedDtor();
}

void DB::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DB::descriptor() {
  ::protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DB& DB::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_5fmodel_2eproto::scc_info_DB.base);
  return *internal_default_instance();
}


void DB::Clear() {
// @@protoc_insertion_point(message_clear_start:DB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  user_password_pair_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DB)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DB.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Table tables = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> user_password_pair = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DB_UserPasswordPairEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DB_UserPasswordPairEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&user_password_pair_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DB.UserPasswordPairEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DB.UserPasswordPairEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DB)
  return false;
#undef DO_
}

void DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DB.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Table tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tables(static_cast<int>(i)),
      output);
  }

  // map<string, string> user_password_pair = 3;
  if (!this->user_password_pair().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DB.UserPasswordPairEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DB.UserPasswordPairEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->user_password_pair().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->user_password_pair().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_password_pair().begin();
          it != this->user_password_pair().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DB_UserPasswordPairEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_password_pair_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<DB_UserPasswordPairEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_password_pair().begin();
          it != this->user_password_pair().end(); ++it) {
        entry.reset(user_password_pair_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DB)
}

::google::protobuf::uint8* DB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DB.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Table tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tables(static_cast<int>(i)), deterministic, target);
  }

  // map<string, string> user_password_pair = 3;
  if (!this->user_password_pair().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DB.UserPasswordPairEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DB.UserPasswordPairEntry.value");
      }
    };

    if (deterministic &&
        this->user_password_pair().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->user_password_pair().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_password_pair().begin();
          it != this->user_password_pair().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DB_UserPasswordPairEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_password_pair_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<DB_UserPasswordPairEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_password_pair().begin();
          it != this->user_password_pair().end(); ++it) {
        entry.reset(user_password_pair_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DB)
  return target;
}

size_t DB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DB)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Table tables = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tables(static_cast<int>(i)));
    }
  }

  // map<string, string> user_password_pair = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_password_pair_size());
  {
    ::std::unique_ptr<DB_UserPasswordPairEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->user_password_pair().begin();
        it != this->user_password_pair().end(); ++it) {
      entry.reset(user_password_pair_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DB)
  GOOGLE_DCHECK_NE(&from, this);
  const DB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DB)
    MergeFrom(*source);
  }
}

void DB::MergeFrom(const DB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  user_password_pair_.MergeFrom(from.user_password_pair_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB::CopyFrom(const DB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB::IsInitialized() const {
  return true;
}

void DB::Swap(DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DB::InternalSwap(DB* other) {
  using std::swap;
  CastToBase(&tables_)->InternalSwap(CastToBase(&other->tables_));
  user_password_pair_.Swap(&other->user_password_pair_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DB::GetMetadata() const {
  protobuf_data_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Field* Arena::CreateMaybeMessage< ::Field >(Arena* arena) {
  return Arena::CreateInternal< ::Field >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Document* Arena::CreateMaybeMessage< ::Document >(Arena* arena) {
  return Arena::CreateInternal< ::Document >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Item* Arena::CreateMaybeMessage< ::Item >(Arena* arena) {
  return Arena::CreateInternal< ::Item >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VectorMetaInfo* Arena::CreateMaybeMessage< ::VectorMetaInfo >(Arena* arena) {
  return Arena::CreateInternal< ::VectorMetaInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FieldMetaInfo* Arena::CreateMaybeMessage< ::FieldMetaInfo >(Arena* arena) {
  return Arena::CreateInternal< ::FieldMetaInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TableMetaInfo* Arena::CreateMaybeMessage< ::TableMetaInfo >(Arena* arena) {
  return Arena::CreateInternal< ::TableMetaInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Table* Arena::CreateMaybeMessage< ::Table >(Arena* arena) {
  return Arena::CreateInternal< ::Table >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DB_UserPasswordPairEntry_DoNotUse* Arena::CreateMaybeMessage< ::DB_UserPasswordPairEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DB_UserPasswordPairEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DB* Arena::CreateMaybeMessage< ::DB >(Arena* arena) {
  return Arena::CreateInternal< ::DB >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
