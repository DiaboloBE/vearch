/*
Vearch Database API

API for sending dynamic records to the Vearch database.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vearch_client

import (
	"encoding/json"
)

// checks if the CreateSpaceRequestEngine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSpaceRequestEngine{}

// CreateSpaceRequestEngine struct for CreateSpaceRequestEngine
type CreateSpaceRequestEngine struct {
	IndexSize *int32 `json:"index_size,omitempty"`
	RetrievalType *string `json:"retrieval_type,omitempty"`
	RetrievalParam map[string]interface{} `json:"retrieval_param,omitempty"`
}

// NewCreateSpaceRequestEngine instantiates a new CreateSpaceRequestEngine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSpaceRequestEngine() *CreateSpaceRequestEngine {
	this := CreateSpaceRequestEngine{}
	return &this
}

// NewCreateSpaceRequestEngineWithDefaults instantiates a new CreateSpaceRequestEngine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSpaceRequestEngineWithDefaults() *CreateSpaceRequestEngine {
	this := CreateSpaceRequestEngine{}
	return &this
}

// GetIndexSize returns the IndexSize field value if set, zero value otherwise.
func (o *CreateSpaceRequestEngine) GetIndexSize() int32 {
	if o == nil || IsNil(o.IndexSize) {
		var ret int32
		return ret
	}
	return *o.IndexSize
}

// GetIndexSizeOk returns a tuple with the IndexSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSpaceRequestEngine) GetIndexSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.IndexSize) {
		return nil, false
	}
	return o.IndexSize, true
}

// HasIndexSize returns a boolean if a field has been set.
func (o *CreateSpaceRequestEngine) HasIndexSize() bool {
	if o != nil && !IsNil(o.IndexSize) {
		return true
	}

	return false
}

// SetIndexSize gets a reference to the given int32 and assigns it to the IndexSize field.
func (o *CreateSpaceRequestEngine) SetIndexSize(v int32) {
	o.IndexSize = &v
}

// GetRetrievalType returns the RetrievalType field value if set, zero value otherwise.
func (o *CreateSpaceRequestEngine) GetRetrievalType() string {
	if o == nil || IsNil(o.RetrievalType) {
		var ret string
		return ret
	}
	return *o.RetrievalType
}

// GetRetrievalTypeOk returns a tuple with the RetrievalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSpaceRequestEngine) GetRetrievalTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RetrievalType) {
		return nil, false
	}
	return o.RetrievalType, true
}

// HasRetrievalType returns a boolean if a field has been set.
func (o *CreateSpaceRequestEngine) HasRetrievalType() bool {
	if o != nil && !IsNil(o.RetrievalType) {
		return true
	}

	return false
}

// SetRetrievalType gets a reference to the given string and assigns it to the RetrievalType field.
func (o *CreateSpaceRequestEngine) SetRetrievalType(v string) {
	o.RetrievalType = &v
}

// GetRetrievalParam returns the RetrievalParam field value if set, zero value otherwise.
func (o *CreateSpaceRequestEngine) GetRetrievalParam() map[string]interface{} {
	if o == nil || IsNil(o.RetrievalParam) {
		var ret map[string]interface{}
		return ret
	}
	return o.RetrievalParam
}

// GetRetrievalParamOk returns a tuple with the RetrievalParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSpaceRequestEngine) GetRetrievalParamOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RetrievalParam) {
		return map[string]interface{}{}, false
	}
	return o.RetrievalParam, true
}

// HasRetrievalParam returns a boolean if a field has been set.
func (o *CreateSpaceRequestEngine) HasRetrievalParam() bool {
	if o != nil && !IsNil(o.RetrievalParam) {
		return true
	}

	return false
}

// SetRetrievalParam gets a reference to the given map[string]interface{} and assigns it to the RetrievalParam field.
func (o *CreateSpaceRequestEngine) SetRetrievalParam(v map[string]interface{}) {
	o.RetrievalParam = v
}

func (o CreateSpaceRequestEngine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSpaceRequestEngine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IndexSize) {
		toSerialize["index_size"] = o.IndexSize
	}
	if !IsNil(o.RetrievalType) {
		toSerialize["retrieval_type"] = o.RetrievalType
	}
	if !IsNil(o.RetrievalParam) {
		toSerialize["retrieval_param"] = o.RetrievalParam
	}
	return toSerialize, nil
}

type NullableCreateSpaceRequestEngine struct {
	value *CreateSpaceRequestEngine
	isSet bool
}

func (v NullableCreateSpaceRequestEngine) Get() *CreateSpaceRequestEngine {
	return v.value
}

func (v *NullableCreateSpaceRequestEngine) Set(val *CreateSpaceRequestEngine) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSpaceRequestEngine) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSpaceRequestEngine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSpaceRequestEngine(val *CreateSpaceRequestEngine) *NullableCreateSpaceRequestEngine {
	return &NullableCreateSpaceRequestEngine{value: val, isSet: true}
}

func (v NullableCreateSpaceRequestEngine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSpaceRequestEngine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


