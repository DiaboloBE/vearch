/*
Vearch Database API

API for sending dynamic records to the Vearch database.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vearch_client

import (
	"encoding/json"
)

// checks if the DeleteDocumentsRequestQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteDocumentsRequestQuery{}

// DeleteDocumentsRequestQuery struct for DeleteDocumentsRequestQuery
type DeleteDocumentsRequestQuery struct {
	DocumentIds []string `json:"document_ids,omitempty"`
}

// NewDeleteDocumentsRequestQuery instantiates a new DeleteDocumentsRequestQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDocumentsRequestQuery() *DeleteDocumentsRequestQuery {
	this := DeleteDocumentsRequestQuery{}
	return &this
}

// NewDeleteDocumentsRequestQueryWithDefaults instantiates a new DeleteDocumentsRequestQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDocumentsRequestQueryWithDefaults() *DeleteDocumentsRequestQuery {
	this := DeleteDocumentsRequestQuery{}
	return &this
}

// GetDocumentIds returns the DocumentIds field value if set, zero value otherwise.
func (o *DeleteDocumentsRequestQuery) GetDocumentIds() []string {
	if o == nil || IsNil(o.DocumentIds) {
		var ret []string
		return ret
	}
	return o.DocumentIds
}

// GetDocumentIdsOk returns a tuple with the DocumentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDocumentsRequestQuery) GetDocumentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DocumentIds) {
		return nil, false
	}
	return o.DocumentIds, true
}

// HasDocumentIds returns a boolean if a field has been set.
func (o *DeleteDocumentsRequestQuery) HasDocumentIds() bool {
	if o != nil && !IsNil(o.DocumentIds) {
		return true
	}

	return false
}

// SetDocumentIds gets a reference to the given []string and assigns it to the DocumentIds field.
func (o *DeleteDocumentsRequestQuery) SetDocumentIds(v []string) {
	o.DocumentIds = v
}

func (o DeleteDocumentsRequestQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteDocumentsRequestQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocumentIds) {
		toSerialize["document_ids"] = o.DocumentIds
	}
	return toSerialize, nil
}

type NullableDeleteDocumentsRequestQuery struct {
	value *DeleteDocumentsRequestQuery
	isSet bool
}

func (v NullableDeleteDocumentsRequestQuery) Get() *DeleteDocumentsRequestQuery {
	return v.value
}

func (v *NullableDeleteDocumentsRequestQuery) Set(val *DeleteDocumentsRequestQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDocumentsRequestQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDocumentsRequestQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDocumentsRequestQuery(val *DeleteDocumentsRequestQuery) *NullableDeleteDocumentsRequestQuery {
	return &NullableDeleteDocumentsRequestQuery{value: val, isSet: true}
}

func (v NullableDeleteDocumentsRequestQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDocumentsRequestQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


